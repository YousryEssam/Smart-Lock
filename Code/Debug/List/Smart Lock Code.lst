
AVRASM ver. 2.1.30  D:\4 CS\Embedded Systems\Final Project\Final Project\Final Project Code\Debug\List\Smart Lock Code.asm Tue Dec 19 19:31:19 2023

D:\4 CS\Embedded Systems\Final Project\Final Project\Final Project Code\Debug\List\Smart Lock Code.asm(1418): warning: Register r5 already defined by the .DEF directive
D:\4 CS\Embedded Systems\Final Project\Final Project\Final Project Code\Debug\List\Smart Lock Code.asm(1419): warning: Register r4 already defined by the .DEF directive
D:\4 CS\Embedded Systems\Final Project\Final Project\Final Project Code\Debug\List\Smart Lock Code.asm(1420): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.00a 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00b9 	JMP  __RESET
000002 940c 0137 	JMP  _Admininterrupt
000004 940c 013a 	JMP  _Setpc
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 7250
000034 7365
000035 2073
000036 202a      	.DB  0x50,0x72,0x65,0x73,0x73,0x20,0x2A,0x20
000037 6f74
000038 4c20
000039 676f
00003a 6e69      	.DB  0x74,0x6F,0x20,0x4C,0x6F,0x67,0x69,0x6E
00003b 4500
00003c 746e
00003d 7265
00003e 7920      	.DB  0x0,0x45,0x6E,0x74,0x65,0x72,0x20,0x79
00003f 756f
000040 2072
000041 4449
000042 203a      	.DB  0x6F,0x75,0x72,0x20,0x49,0x44,0x3A,0x20
000043 2500
000044 0063
000045 7257
000046 6e6f      	.DB  0x0,0x25,0x63,0x0,0x57,0x72,0x6F,0x6E
000047 2067
000048 4449
000049 4500
00004a 746e      	.DB  0x67,0x20,0x49,0x44,0x0,0x45,0x6E,0x74
00004b 7265
00004c 5020
00004d 7361
00004e 2073      	.DB  0x65,0x72,0x20,0x50,0x61,0x73,0x73,0x20
00004f 6f43
000050 6564
000051 203a
000052 5300      	.DB  0x43,0x6F,0x64,0x65,0x3A,0x20,0x0,0x53
000053 726f
000054 7972
000055 202c
000056 7257      	.DB  0x6F,0x72,0x72,0x79,0x2C,0x20,0x57,0x72
000057 6e6f
000058 2067
000059 4350
00005a 5700      	.DB  0x6F,0x6E,0x67,0x20,0x50,0x43,0x0,0x57
00005b 6c65
00005c 6f63
00005d 206d
00005e 253a      	.DB  0x65,0x6C,0x63,0x6F,0x6D,0x20,0x3A,0x25
00005f 2073
000060 200a
000061 2020
000062 6f44      	.DB  0x73,0x20,0xA,0x20,0x20,0x20,0x44,0x6F
000063 726f
000064 6920
000065 2073
000066 706f      	.DB  0x6F,0x72,0x20,0x69,0x73,0x20,0x6F,0x70
000067 6e65
000068 6e69
000069 0067
00006a 200a      	.DB  0x65,0x6E,0x69,0x6E,0x67,0x0,0xA,0x20
00006b 4420
00006c 6f6f
00006d 2072
00006e 7369      	.DB  0x20,0x44,0x6F,0x6F,0x72,0x20,0x69,0x73
00006f 4320
000070 6f6c
000071 6573
000072 6e69      	.DB  0x20,0x43,0x6C,0x6F,0x73,0x65,0x69,0x6E
000073 0067
000074 654e
000075 2077
000076 4350      	.DB  0x67,0x0,0x4E,0x65,0x77,0x20,0x50,0x43
000077 7320
000078 6f74
000079 6572
00007a 2064      	.DB  0x20,0x73,0x74,0x6F,0x72,0x65,0x64,0x20
00007b 3a28
00007c 4500
00007d 746e
00007e 7265      	.DB  0x28,0x3A,0x0,0x45,0x6E,0x74,0x65,0x72
00007f 4120
000080 6d64
000081 6e69
000082 5020      	.DB  0x20,0x41,0x64,0x6D,0x69,0x6E,0x20,0x50
000083 3a43
000084 0020
000085 7453
000086 6475      	.DB  0x43,0x3A,0x20,0x0,0x53,0x74,0x75,0x64
000087 6e65
000088 2074
000089 4449
00008a 203a      	.DB  0x65,0x6E,0x74,0x20,0x49,0x44,0x3A,0x20
00008b 4500
00008c 746e
00008d 7265
00008e 6e20      	.DB  0x0,0x45,0x6E,0x74,0x65,0x72,0x20,0x6E
00008f 7765
000090 5020
000091 2043
000092 203a      	.DB  0x65,0x77,0x20,0x50,0x43,0x20,0x3A,0x20
000093 0a00
000094 6f43
000095 746e
000096 6361      	.DB  0x0,0xA,0x43,0x6F,0x6E,0x74,0x61,0x63
000097 2074
000098 6441
000099 696d
00009a 006e      	.DB  0x74,0x20,0x41,0x64,0x6D,0x69,0x6E,0x0
00009b 6e45
00009c 6574
00009d 2072
00009e 4449      	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x49,0x44
00009f 3a20
0000a0 0020
0000a1 450a
0000a2 746e      	.DB  0x20,0x3A,0x20,0x0,0xA,0x45,0x6E,0x74
0000a3 7265
0000a4 4f20
0000a5 646c
0000a6 5020      	.DB  0x65,0x72,0x20,0x4F,0x6C,0x64,0x20,0x50
0000a7 2043
0000a8 203a
0000a9 0a00
0000aa 6552      	.DB  0x43,0x20,0x3A,0x20,0x0,0xA,0x52,0x65
0000ab 652d
0000ac 746e
0000ad 7265
0000ae 6e20      	.DB  0x2D,0x65,0x6E,0x74,0x65,0x72,0x20,0x6E
0000af 7765
0000b0 5020
0000b1 2043
0000b2 203a      	.DB  0x65,0x77,0x20,0x50,0x43,0x20,0x3A,0x20
D:\4 CS\Embedded Systems\Final Project\Final Project\Final Project Code\Debug\List\Smart Lock Code.asm(1490): warning: .cseg .db misalignment - padding zero byte
0000b3 0000      	.DB  0x0
                 _0x2000003:
0000b4 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
0000b5 0002      	.DW  0x02
0000b6 0197      	.DW  __base_y_G100
0000b7 0168      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
0000b8 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000b9 94f8      	CLI
                 
0000ba 27ee      	CLR  R30
0000bb bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000bc e0f1      	LDI  R31,1
0000bd bffb      	OUT  GICR,R31
0000be bfeb      	OUT  GICR,R30
0000bf bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000c0 e08d      	LDI  R24,(14-2)+1
0000c1 e0a2      	LDI  R26,2
0000c2 27bb      	CLR  R27
                 __CLEAR_REG:
0000c3 93ed      	ST   X+,R30
0000c4 958a      	DEC  R24
0000c5 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000c6 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000c7 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000c8 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000c9 93ed      	ST   X+,R30
0000ca 9701      	SBIW R24,1
0000cb f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000cc e6ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000cd e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000ce 9185      	LPM  R24,Z+
0000cf 9195      	LPM  R25,Z+
0000d0 9700      	SBIW R24,0
0000d1 f061      	BREQ __GLOBAL_INI_END
0000d2 91a5      	LPM  R26,Z+
0000d3 91b5      	LPM  R27,Z+
0000d4 9005      	LPM  R0,Z+
0000d5 9015      	LPM  R1,Z+
0000d6 01bf      	MOVW R22,R30
0000d7 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000d8 9005      	LPM  R0,Z+
0000d9 920d      	ST   X+,R0
0000da 9701      	SBIW R24,1
0000db f7e1      	BRNE __GLOBAL_INI_LOOP
0000dc 01fb      	MOVW R30,R22
0000dd cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000de e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000df bfed      	OUT  SPL,R30
0000e0 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000e1 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000e2 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000e3 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000e4 940c 00e6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;char keyPad();
                 ;void startSmartLock();
                 ;void beepSound();
                 ;int findUser(char dig1, char dig2, char dig3);
                 ;unsigned char EE_Read(unsigned int address);
                 ;void EE_Write(unsigned int address, unsigned char data);
                 ;void initialPassCodes(char resetPc);
                 ;int passCodeMatch( int id, char pas1, char pas2 , char pas3 );
                 ;void openDoor();
                 ;void closeDoor();
                 ;void changePass();
                 ;void ContactAdmin();
                 ;void AdminPassChange();
                 ;void newPassCode(int userId  , char dig1  , char dig2 , char dig3);
                 ;void main(void){
                 ; 0000 0022 void main(void){
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0023 // Start Code;
                 ; 0000 0024 startSmartLock();
0000e6 d1a7      	RCALL _startSmartLock
                 ; 0000 0025 while (1){
                 _0x3:
                 ; 0000 0026 char num , dig1 , dig2 , dig3 ,userId ;
                 ; 0000 0027 lcd_clear();
0000e7 9725      	SBIW R28,5
                 ;	num -> Y+4
                 ;	dig1 -> Y+3
                 ;	dig2 -> Y+2
                 ;	dig3 -> Y+1
                 ;	userId -> Y+0
0000e8 d2c3      	RCALL _lcd_clear
                 ; 0000 0028 lcd_gotoxy(2,1);
0000e9 e0e2      	LDI  R30,LOW(2)
0000ea 93ea      	ST   -Y,R30
0000eb e0a1      	LDI  R26,LOW(1)
0000ec d2ad      	RCALL _lcd_gotoxy
                 ; 0000 0029 lcd_printf("Press * to Login");
                +
0000ed e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000ee e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ef d47a      	RCALL SUBOPT_0x0
                 ; 0000 002A num = keyPad();
0000f0 83ec      	STD  Y+4,R30
                 ; 0000 002B if(num != '*') continue;
0000f1 81ac      	LDD  R26,Y+4
0000f2 32aa      	CPI  R26,LOW(0x2A)
0000f3 f011      	BREQ _0x6
0000f4 9625      	ADIW R28,5
0000f5 cff1      	RJMP _0x3
                 ; 0000 002C lcd_clear();
                 _0x6:
0000f6 d2b5      	RCALL _lcd_clear
                 ; 0000 002D lcd_printf("Enter your ID: ");// Ask for ID
                +
0000f7 e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
0000f8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
0000f9 d470      	RCALL SUBOPT_0x0
                 ; 0000 002E // Take 3 Digit ID and print it to the user
                 ; 0000 002F dig1 = keyPad();
0000fa d475      	RCALL SUBOPT_0x1
                 ; 0000 0030 lcd_printf("%c" , dig1);
                 ; 0000 0031 dig2 = keyPad();
                 ; 0000 0032 lcd_printf("%c" , dig2);
                 ; 0000 0033 dig3 = keyPad();
                 ; 0000 0034 lcd_printf("%c" , dig3);
                 ; 0000 0035 delay_ms(1000);
                 ; 0000 0036 
                 ; 0000 0037 // to Know user Id in data or is not Exist
                 ; 0000 0038 userId = findUser(dig1, dig2, dig3 );
0000fb 81eb      	LDD  R30,Y+3
0000fc 93ea      	ST   -Y,R30
0000fd 81eb      	LDD  R30,Y+3
0000fe 93ea      	ST   -Y,R30
0000ff 81ab      	LDD  R26,Y+3
000100 d166      	RCALL _findUser
000101 83e8      	ST   Y,R30
                 ; 0000 0039 lcd_clear();
000102 d2a9      	RCALL _lcd_clear
                 ; 0000 003A // if User id not exist
                 ; 0000 003B if(userId == 10) {
000103 81a8      	LD   R26,Y
000104 30aa      	CPI  R26,LOW(0xA)
000105 f431      	BRNE _0x7
                 ; 0000 003C lcd_printf("Wrong ID");
                +
000106 e8ea     +LDI R30 , LOW ( 2 * _0x0 + ( 36 ) )
000107 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 36 ) )
                 	__POINTW1FN _0x0,36
000108 d493      	RCALL SUBOPT_0x2
                 ; 0000 003D beepSound();
                 ; 0000 003E beepSound();
000109 d264      	RCALL _beepSound
                 ; 0000 003F continue;
00010a 9625      	ADIW R28,5
00010b cfdb      	RJMP _0x3
                 ; 0000 0040 }
                 ; 0000 0041 lcd_printf("Enter Pass Code: ");
                 _0x7:
                +
00010c e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 45 ) )
00010d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 45 ) )
                 	__POINTW1FN _0x0,45
00010e d45b      	RCALL SUBOPT_0x0
                 ; 0000 0042 // Take 3 Digit ID and print it to the user
                 ; 0000 0043 dig1 = keyPad();
00010f d460      	RCALL SUBOPT_0x1
                 ; 0000 0044 lcd_printf("%c" , dig1);
                 ; 0000 0045 dig2 = keyPad();
                 ; 0000 0046 lcd_printf("%c" , dig2);
                 ; 0000 0047 dig3 = keyPad();
                 ; 0000 0048 lcd_printf("%c" , dig3);
                 ; 0000 0049 delay_ms(1000);
                 ; 0000 004A 
                 ; 0000 004B lcd_clear();
000110 d29b      	RCALL _lcd_clear
                 ; 0000 004C // In case pass does not match
                 ; 0000 004D if(passCodeMatch(userId , dig1 , dig2 , dig3 ) == 0 ){
000111 81e8      	LD   R30,Y
000112 e0f0      	LDI  R31,0
000113 93fa      	ST   -Y,R31
000114 93ea      	ST   -Y,R30
000115 81ed      	LDD  R30,Y+5
000116 93ea      	ST   -Y,R30
000117 81ed      	LDD  R30,Y+5
000118 93ea      	ST   -Y,R30
000119 81ad      	LDD  R26,Y+5
00011a d0c6      	RCALL _passCodeMatch
00011b 9730      	SBIW R30,0
00011c f429      	BRNE _0x8
                 ; 0000 004E lcd_printf("Sorry, Wrong PC");
                +
00011d eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 63 ) )
00011e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 63 ) )
                 	__POINTW1FN _0x0,63
00011f d47c      	RCALL SUBOPT_0x2
                 ; 0000 004F beepSound();
                 ; 0000 0050 continue;
000120 9625      	ADIW R28,5
000121 cfc5      	RJMP _0x3
                 ; 0000 0051 }
                 ; 0000 0052 
                 ; 0000 0053 lcd_printf("Welcom :%s \n   Door is opening" ,  UsersNames[userId]);
                 _0x8:
                +
000122 ebe5     +LDI R30 , LOW ( 2 * _0x0 + ( 79 ) )
000123 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 79 ) )
                 	__POINTW1FN _0x0,79
000124 93fa      	ST   -Y,R31
000125 93ea      	ST   -Y,R30
000126 81ea      	LDD  R30,Y+2
000127 e0f0      	LDI  R31,0
000128 d535      	RCALL __LSLW3
000129 59e1      	SUBI R30,LOW(-_UsersNames)
00012a 4ffe      	SBCI R31,HIGH(-_UsersNames)
00012b 2766      	CLR  R22
00012c 2777      	CLR  R23
00012d d474      	RCALL SUBOPT_0x3
                 ; 0000 0054 openDoor();
00012e d0a9      	RCALL _openDoor
                 ; 0000 0055 lcd_clear();
00012f d27c      	RCALL _lcd_clear
                 ; 0000 0056 lcd_printf("\n  Door is Closeing");
                +
000130 ede4     +LDI R30 , LOW ( 2 * _0x0 + ( 110 ) )
000131 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 110 ) )
                 	__POINTW1FN _0x0,110
000132 d474      	RCALL SUBOPT_0x4
                 ; 0000 0057 closeDoor();
000133 d09b      	RCALL _closeDoor
                 ; 0000 0058 }
000134 9625      	ADIW R28,5
000135 cfb1      	RJMP _0x3
                 ; 0000 0059 
                 ; 0000 005A }
                 _0x9:
000136 cfff      	RJMP _0x9
                 ; .FEND
                 ;interrupt [2] void Admininterrupt(void){
                 ; 0000 005D interrupt [2] void Admininterrupt(void){
                 _Admininterrupt:
                 ; .FSTART _Admininterrupt
000137 d475      	RCALL SUBOPT_0x5
                 ; 0000 005E AdminPassChange();
000138 d02b      	RCALL _AdminPassChange
                 ; 0000 005F }
000139 c002      	RJMP _0x79
                 ; .FEND
                 ;interrupt [3] void Setpc(void){
                 ; 0000 0060 interrupt [3] void Setpc(void){
                 _Setpc:
                 ; .FSTART _Setpc
00013a d472      	RCALL SUBOPT_0x5
                 ; 0000 0061 changePass();
00013b d057      	RCALL _changePass
                 ; 0000 0062 }
                 _0x79:
00013c 91e9      	LD   R30,Y+
00013d bfef      	OUT  SREG,R30
00013e 91f9      	LD   R31,Y+
00013f 91e9      	LD   R30,Y+
000140 91b9      	LD   R27,Y+
000141 91a9      	LD   R26,Y+
000142 9199      	LD   R25,Y+
000143 9189      	LD   R24,Y+
000144 9179      	LD   R23,Y+
000145 9169      	LD   R22,Y+
000146 90f9      	LD   R15,Y+
000147 9019      	LD   R1,Y+
000148 9009      	LD   R0,Y+
000149 9518      	RETI
                 ; .FEND
                 ;void newPassCode(int userId  , char dig1  , char dig2 , char dig3){
                 ; 0000 0063 void newPassCode(int userId  , char dig1  , char dig2 , char dig3){
                 _newPassCode:
                 ; .FSTART _newPassCode
                 ; 0000 0064 
                 ; 0000 0065 lcd_clear();
00014a d470      	RCALL SUBOPT_0x6
                 ;	userId -> R20,R21
                 ;	dig1 -> R19
                 ;	dig2 -> R16
                 ;	dig3 -> R17
00014b d260      	RCALL _lcd_clear
                 ; 0000 0066 lcd_printf("New PC stored (:");
                +
00014c eee8     +LDI R30 , LOW ( 2 * _0x0 + ( 130 ) )
00014d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 130 ) )
                 	__POINTW1FN _0x0,130
00014e d458      	RCALL SUBOPT_0x4
                 ; 0000 0067 EE_Write(userId*3 , dig1);
00014f d472      	RCALL SUBOPT_0x7
000150 93fa      	ST   -Y,R31
000151 93ea      	ST   -Y,R30
000152 2fa3      	MOV  R26,R19
000153 d105      	RCALL _EE_Write
                 ; 0000 0068 EE_Write(userId*3 + 1 , dig2);
000154 d46d      	RCALL SUBOPT_0x7
000155 9631      	ADIW R30,1
000156 93fa      	ST   -Y,R31
000157 93ea      	ST   -Y,R30
000158 2fa0      	MOV  R26,R16
000159 d0ff      	RCALL _EE_Write
                 ; 0000 0069 EE_Write(userId*3 + 2 , dig3);
00015a d467      	RCALL SUBOPT_0x7
00015b 9632      	ADIW R30,2
00015c 93fa      	ST   -Y,R31
00015d 93ea      	ST   -Y,R30
00015e 2fa1      	MOV  R26,R17
00015f d0f9      	RCALL _EE_Write
                 ; 0000 006A delay_ms(1500);
000160 edac      	LDI  R26,LOW(1500)
000161 e0b5      	LDI  R27,HIGH(1500)
000162 d513      	RCALL _delay_ms
                 ; 0000 006B }
000163 c095      	RJMP _0x2080004
                 ; .FEND
                 ;void AdminPassChange(){
                 ; 0000 006C void AdminPassChange(){
                 _AdminPassChange:
                 ; .FSTART _AdminPassChange
                 ; 0000 006D 
                 ; 0000 006E char  dig1 , dig2 , dig3 ,userId;
                 ; 0000 006F 
                 ; 0000 0070 lcd_clear();
000164 d4e9      	RCALL __SAVELOCR4
                 ;	dig1 -> R17
                 ;	dig2 -> R16
                 ;	dig3 -> R19
                 ;	userId -> R18
000165 d246      	RCALL _lcd_clear
                 ; 0000 0071 lcd_printf("Enter Admin PC: ");// Ask for ID
                +
000166 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 147 ) )
000167 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 147 ) )
                 	__POINTW1FN _0x0,147
000168 d401      	RCALL SUBOPT_0x0
                 ; 0000 0072 
                 ; 0000 0073 // Take 3 Digit ID and print it to the user
                 ; 0000 0074 dig1 = keyPad();
000169 d45d      	RCALL SUBOPT_0x8
                 ; 0000 0075 lcd_printf("%c" , dig1);
                 ; 0000 0076 dig2 = keyPad();
00016a d466      	RCALL SUBOPT_0x9
                 ; 0000 0077 lcd_printf("%c" , dig2);
                 ; 0000 0078 dig3 = keyPad();
00016b d470      	RCALL SUBOPT_0xA
                 ; 0000 0079 lcd_printf("%c" , dig3);
                 ; 0000 007A delay_ms(500);
00016c efa4      	LDI  R26,LOW(500)
00016d e0b1      	LDI  R27,HIGH(500)
00016e d507      	RCALL _delay_ms
                 ; 0000 007B 
                 ; 0000 007C if(passCodeMatch( 0 , dig1 , dig2 , dig3 ) == 0){
00016f d477      	RCALL SUBOPT_0xB
000170 d47b      	RCALL SUBOPT_0xC
000171 f411      	BRNE _0xA
                 ; 0000 007D ContactAdmin();
000172 d01a      	RCALL _ContactAdmin
                 ; 0000 007E return ;
000173 c016      	RJMP _0x2080006
                 ; 0000 007F }
                 ; 0000 0080 
                 ; 0000 0081 lcd_clear();
                 _0xA:
000174 d237      	RCALL _lcd_clear
                 ; 0000 0082 lcd_printf("Student ID: ");// Ask for ID
                +
000175 e0ea     +LDI R30 , LOW ( 2 * _0x0 + ( 164 ) )
000176 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 164 ) )
                 	__POINTW1FN _0x0,164
000177 d3f2      	RCALL SUBOPT_0x0
                 ; 0000 0083 
                 ; 0000 0084 // Take 3 Digit ID and print it to the user
                 ; 0000 0085 
                 ; 0000 0086 dig1 = keyPad();
000178 d44e      	RCALL SUBOPT_0x8
                 ; 0000 0087 lcd_printf("%c" , dig1);
                 ; 0000 0088 dig2 = keyPad();
000179 d457      	RCALL SUBOPT_0x9
                 ; 0000 0089 lcd_printf("%c" , dig2);
                 ; 0000 008A dig3 = keyPad();
00017a d461      	RCALL SUBOPT_0xA
                 ; 0000 008B lcd_printf("%c" , dig3);
                 ; 0000 008C delay_ms(500);
00017b efa4      	LDI  R26,LOW(500)
00017c e0b1      	LDI  R27,HIGH(500)
00017d d4f8      	RCALL _delay_ms
                 ; 0000 008D 
                 ; 0000 008E // to Know user Id in data or is not Exist
                 ; 0000 008F userId = findUser(dig1, dig2, dig3 );
00017e d473      	RCALL SUBOPT_0xD
                 ; 0000 0090 lcd_clear();
00017f d22c      	RCALL _lcd_clear
                 ; 0000 0091 if ( userId == 10 ){
000180 302a      	CPI  R18,10
000181 f411      	BRNE _0xB
                 ; 0000 0092 ContactAdmin();
000182 d00a      	RCALL _ContactAdmin
                 ; 0000 0093 return ;
000183 c006      	RJMP _0x2080006
                 ; 0000 0094 }
                 ; 0000 0095 
                 ; 0000 0096 lcd_clear();
                 _0xB:
000184 d473      	RCALL SUBOPT_0xE
                 ; 0000 0097 lcd_printf("Enter new PC : ");
                 ; 0000 0098 dig1 = keyPad();
000185 d441      	RCALL SUBOPT_0x8
                 ; 0000 0099 lcd_printf("%c" , dig1);
                 ; 0000 009A dig2 = keyPad();
000186 d44a      	RCALL SUBOPT_0x9
                 ; 0000 009B lcd_printf("%c" , dig2);
                 ; 0000 009C dig3 = keyPad();
000187 d454      	RCALL SUBOPT_0xA
                 ; 0000 009D lcd_printf("%c" , dig3);
                 ; 0000 009E 
                 ; 0000 009F newPassCode(userId ,dig1 , dig2, dig3 );
000188 d473      	RCALL SUBOPT_0xF
000189 d477      	RCALL SUBOPT_0x10
                 ; 0000 00A0 }
                 _0x2080006:
00018a d4ca      	RCALL __LOADLOCR4
00018b 9624      	ADIW R28,4
00018c 9508      	RET
                 ; .FEND
                 ;void ContactAdmin(){
                 ; 0000 00A1 void ContactAdmin(){
                 _ContactAdmin:
                 ; .FSTART _ContactAdmin
                 ; 0000 00A2 lcd_clear();
00018d d21e      	RCALL _lcd_clear
                 ; 0000 00A3 lcd_printf("\nContact Admin");
                +
00018e e2e7     +LDI R30 , LOW ( 2 * _0x0 + ( 193 ) )
00018f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 193 ) )
                 	__POINTW1FN _0x0,193
000190 d40b      	RCALL SUBOPT_0x2
                 ; 0000 00A4 beepSound();
                 ; 0000 00A5 beepSound();
000191 d1dc      	RCALL _beepSound
                 ; 0000 00A6 }
000192 9508      	RET
                 ; .FEND
                 ;void changePass(){
                 ; 0000 00A7 void changePass(){
                 _changePass:
                 ; .FSTART _changePass
                 ; 0000 00A8 char dig1 , dig2 , dig3 ,userId ,dig11 , dig22 , dig33 ;
                 ; 0000 00A9 lcd_clear();
000193 9721      	SBIW R28,1
000194 d4b7      	RCALL __SAVELOCR6
                 ;	dig1 -> R17
                 ;	dig2 -> R16
                 ;	dig3 -> R19
                 ;	userId -> R18
                 ;	dig11 -> R21
                 ;	dig22 -> R20
                 ;	dig33 -> Y+6
000195 d216      	RCALL _lcd_clear
                 ; 0000 00AA lcd_printf("Enter ID : ");
                +
000196 e3e6     +LDI R30 , LOW ( 2 * _0x0 + ( 208 ) )
000197 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 208 ) )
                 	__POINTW1FN _0x0,208
000198 d3d1      	RCALL SUBOPT_0x0
                 ; 0000 00AB 
                 ; 0000 00AC dig1 = keyPad();
000199 d42d      	RCALL SUBOPT_0x8
                 ; 0000 00AD lcd_printf("%c" , dig1);
                 ; 0000 00AE dig2 = keyPad();
00019a d436      	RCALL SUBOPT_0x9
                 ; 0000 00AF lcd_printf("%c" , dig2);
                 ; 0000 00B0 dig3 = keyPad();
00019b d440      	RCALL SUBOPT_0xA
                 ; 0000 00B1 lcd_printf("%c" , dig3);
                 ; 0000 00B2 
                 ; 0000 00B3 userId = findUser(dig1, dig2, dig3 );
00019c d455      	RCALL SUBOPT_0xD
                 ; 0000 00B4 
                 ; 0000 00B5 if(userId == 10)// if User id not exist
00019d 302a      	CPI  R18,10
00019e f411      	BRNE _0xC
                 ; 0000 00B6 {
                 ; 0000 00B7 ContactAdmin();
00019f dfed      	RCALL _ContactAdmin
                 ; 0000 00B8 return ;
0001a0 c02b      	RJMP _0x2080005
                 ; 0000 00B9 }
                 ; 0000 00BA 
                 ; 0000 00BB lcd_printf("\nEnter Old PC : ");
                 _0xC:
                +
0001a1 e4e2     +LDI R30 , LOW ( 2 * _0x0 + ( 220 ) )
0001a2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 220 ) )
                 	__POINTW1FN _0x0,220
0001a3 d3c6      	RCALL SUBOPT_0x0
                 ; 0000 00BC 
                 ; 0000 00BD dig1 = keyPad();
0001a4 d422      	RCALL SUBOPT_0x8
                 ; 0000 00BE lcd_printf("%c" , dig1);
                 ; 0000 00BF dig2 = keyPad();
0001a5 d42b      	RCALL SUBOPT_0x9
                 ; 0000 00C0 lcd_printf("%c" , dig2);
                 ; 0000 00C1 dig3 = keyPad();
0001a6 d435      	RCALL SUBOPT_0xA
                 ; 0000 00C2 lcd_printf("%c" , dig3);
                 ; 0000 00C3 
                 ; 0000 00C4 if(passCodeMatch(userId , dig1 , dig2 , dig3 ) == 0 ){
0001a7 d454      	RCALL SUBOPT_0xF
0001a8 d443      	RCALL SUBOPT_0xC
0001a9 f411      	BRNE _0xD
                 ; 0000 00C5 ContactAdmin();
0001aa dfe2      	RCALL _ContactAdmin
                 ; 0000 00C6 return ;
0001ab c020      	RJMP _0x2080005
                 ; 0000 00C7 }
                 ; 0000 00C8 
                 ; 0000 00C9 lcd_clear();
                 _0xD:
0001ac d44b      	RCALL SUBOPT_0xE
                 ; 0000 00CA lcd_printf("Enter new PC : ");
                 ; 0000 00CB dig1 = keyPad();
0001ad d419      	RCALL SUBOPT_0x8
                 ; 0000 00CC lcd_printf("%c" , dig1);
                 ; 0000 00CD dig2 = keyPad();
0001ae d422      	RCALL SUBOPT_0x9
                 ; 0000 00CE lcd_printf("%c" , dig2);
                 ; 0000 00CF dig3 = keyPad();
0001af d42c      	RCALL SUBOPT_0xA
                 ; 0000 00D0 lcd_printf("%c" , dig3);
                 ; 0000 00D1 
                 ; 0000 00D2 
                 ; 0000 00D3 lcd_printf("\nRe-enter new PC : ");
                +
0001b0 e5e3     +LDI R30 , LOW ( 2 * _0x0 + ( 237 ) )
0001b1 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 237 ) )
                 	__POINTW1FN _0x0,237
0001b2 d3b7      	RCALL SUBOPT_0x0
                 ; 0000 00D4 dig11 = keyPad();
0001b3 2f5e      	MOV  R21,R30
                 ; 0000 00D5 lcd_printf("%c" , dig1);
0001b4 d450      	RCALL SUBOPT_0x11
0001b5 2fe1      	MOV  R30,R17
0001b6 d453      	RCALL SUBOPT_0x12
                 ; 0000 00D6 dig22 = keyPad();
0001b7 d158      	RCALL _keyPad
0001b8 2f4e      	MOV  R20,R30
                 ; 0000 00D7 lcd_printf("%c" , dig2);
0001b9 d44b      	RCALL SUBOPT_0x11
0001ba 2fe0      	MOV  R30,R16
0001bb d44e      	RCALL SUBOPT_0x12
                 ; 0000 00D8 dig33 = keyPad();
0001bc d153      	RCALL _keyPad
0001bd 83ee      	STD  Y+6,R30
                 ; 0000 00D9 lcd_printf("%c" , dig3);
0001be d446      	RCALL SUBOPT_0x11
0001bf 2fe3      	MOV  R30,R19
0001c0 d449      	RCALL SUBOPT_0x12
                 ; 0000 00DA 
                 ; 0000 00DB if (dig1 != dig11 || dig2 != dig22 || dig3 !=dig33   ){
0001c1 1751      	CP   R21,R17
0001c2 f429      	BRNE _0xF
0001c3 1740      	CP   R20,R16
0001c4 f419      	BRNE _0xF
0001c5 81ee      	LDD  R30,Y+6
0001c6 17e3      	CP   R30,R19
0001c7 f011      	BREQ _0xE
                 _0xF:
                 ; 0000 00DC ContactAdmin();
0001c8 dfc4      	RCALL _ContactAdmin
                 ; 0000 00DD return ;
0001c9 c002      	RJMP _0x2080005
                 ; 0000 00DE }
                 ; 0000 00DF newPassCode(userId ,dig1 , dig2, dig3 );
                 _0xE:
0001ca d431      	RCALL SUBOPT_0xF
0001cb d435      	RCALL SUBOPT_0x10
                 ; 0000 00E0 }
                 _0x2080005:
0001cc d486      	RCALL __LOADLOCR6
0001cd 9627      	ADIW R28,7
0001ce 9508      	RET
                 ; .FEND
                 ;void closeDoor(){
                 ; 0000 00E1 void closeDoor(){
                 _closeDoor:
                 ; .FSTART _closeDoor
                 ; 0000 00E2 DDRC  |= (1 << 1);
0001cf 9aa1      	SBI  0x14,1
                 ; 0000 00E3 PORTC |= (1 << 1);
0001d0 9aa9      	SBI  0x15,1
                 ; 0000 00E4 delay_ms(2000);
0001d1 eda0      	LDI  R26,LOW(2000)
0001d2 e0b7      	LDI  R27,HIGH(2000)
0001d3 d4a2      	RCALL _delay_ms
                 ; 0000 00E5 PORTC &= ~(1 << 1);
0001d4 98a9      	CBI  0x15,1
                 ; 0000 00E6 delay_ms(2000);
0001d5 eda0      	LDI  R26,LOW(2000)
0001d6 e0b7      	LDI  R27,HIGH(2000)
0001d7 c19e      	RJMP _0x2080002
                 ; 0000 00E7 }
                 ; .FEND
                 ;void openDoor(){
                 ; 0000 00E8 void openDoor(){
                 _openDoor:
                 ; .FSTART _openDoor
                 ; 0000 00E9 
                 ; 0000 00EA DDRC  |= (1 << 0);
0001d8 9aa0      	SBI  0x14,0
                 ; 0000 00EB PORTC |= (1 << 0);
0001d9 9aa8      	SBI  0x15,0
                 ; 0000 00EC delay_ms(2000);
0001da eda0      	LDI  R26,LOW(2000)
0001db e0b7      	LDI  R27,HIGH(2000)
0001dc d499      	RCALL _delay_ms
                 ; 0000 00ED PORTC &= ~(1 << 0);
0001dd 98a8      	CBI  0x15,0
                 ; 0000 00EE delay_ms(2000);
0001de eda0      	LDI  R26,LOW(2000)
0001df e0b7      	LDI  R27,HIGH(2000)
0001e0 c195      	RJMP _0x2080002
                 ; 0000 00EF 
                 ; 0000 00F0 }
                 ; .FEND
                 ;int passCodeMatch ( int id , char pas1, char pas2 , char pas3 ){
                 ; 0000 00F1 int passCodeMatch ( int id , char pas1, char pas2 , char pas3 ){
                 _passCodeMatch:
                 ; .FSTART _passCodeMatch
                 ; 0000 00F2 if(EE_Read(3*id ) == pas1 &&
0001e1 d3d9      	RCALL SUBOPT_0x6
                 ;	id -> R20,R21
                 ;	pas1 -> R19
                 ;	pas2 -> R16
                 ;	pas3 -> R17
                 ; 0000 00F3 EE_Read(3*id + 1) == pas2 &&
                 ; 0000 00F4 EE_Read(3*id + 2) == pas3 )
0001e2 d3df      	RCALL SUBOPT_0x7
0001e3 01df      	MOVW R26,R30
0001e4 d068      	RCALL _EE_Read
0001e5 173e      	CP   R19,R30
0001e6 f461      	BRNE _0x12
0001e7 d3da      	RCALL SUBOPT_0x7
0001e8 9631      	ADIW R30,1
0001e9 01df      	MOVW R26,R30
0001ea d062      	RCALL _EE_Read
0001eb 170e      	CP   R16,R30
0001ec f431      	BRNE _0x12
0001ed d3d4      	RCALL SUBOPT_0x7
0001ee 9632      	ADIW R30,2
0001ef 01df      	MOVW R26,R30
0001f0 d05c      	RCALL _EE_Read
0001f1 171e      	CP   R17,R30
0001f2 f009      	BREQ _0x13
                 _0x12:
0001f3 c003      	RJMP _0x11
                 _0x13:
                 ; 0000 00F5 {
                 ; 0000 00F6 return 1;
0001f4 e0e1      	LDI  R30,LOW(1)
0001f5 e0f0      	LDI  R31,HIGH(1)
0001f6 c002      	RJMP _0x2080004
                 ; 0000 00F7 }
                 ; 0000 00F8 return 0;
                 _0x11:
0001f7 e0e0      	LDI  R30,LOW(0)
0001f8 e0f0      	LDI  R31,HIGH(0)
                 _0x2080004:
0001f9 d459      	RCALL __LOADLOCR6
0001fa 962a      	ADIW R28,10
0001fb 9508      	RET
                 ; 0000 00F9 }
                 ; .FEND
                 ;void initialPassCodes(char resetPc){
                 ; 0000 00FA void initialPassCodes(char resetPc){
                 _initialPassCodes:
                 ; .FSTART _initialPassCodes
                 ; 0000 00FB if ( resetPc == '1' ||
0001fc 931a      	ST   -Y,R17
0001fd 2f1a      	MOV  R17,R26
                 ;	resetPc -> R17
                 ; 0000 00FC EE_Read(0) == 255 &&
                 ; 0000 00FD EE_Read(1) == 255 &&
                 ; 0000 00FE EE_Read(2) == 255  ){
0001fe 3311      	CPI  R17,49
0001ff f081      	BREQ _0x15
000200 e0a0      	LDI  R26,LOW(0)
000201 e0b0      	LDI  R27,0
000202 d04a      	RCALL _EE_Read
000203 3fef      	CPI  R30,LOW(0xFF)
000204 f451      	BRNE _0x16
000205 e0a1      	LDI  R26,LOW(1)
000206 e0b0      	LDI  R27,0
000207 d045      	RCALL _EE_Read
000208 3fef      	CPI  R30,LOW(0xFF)
000209 f429      	BRNE _0x16
00020a e0a2      	LDI  R26,LOW(2)
00020b e0b0      	LDI  R27,0
00020c d040      	RCALL _EE_Read
00020d 3fef      	CPI  R30,LOW(0xFF)
00020e f009      	BREQ _0x15
                 _0x16:
00020f c03c      	RJMP _0x14
                 _0x15:
                 ; 0000 00FF EE_Write(0 ,'2' );
000210 d3d6      	RCALL SUBOPT_0xB
000211 e3a2      	LDI  R26,LOW(50)
000212 d046      	RCALL _EE_Write
                 ; 0000 0100 EE_Write(1 ,'0' );
000213 e0e1      	LDI  R30,LOW(1)
000214 e0f0      	LDI  R31,HIGH(1)
000215 d3f8      	RCALL SUBOPT_0x13
                 ; 0000 0101 EE_Write(2 ,'3' );
000216 e0e2      	LDI  R30,LOW(2)
000217 e0f0      	LDI  R31,HIGH(2)
000218 d3f9      	RCALL SUBOPT_0x14
                 ; 0000 0102 
                 ; 0000 0103 EE_Write(3 ,'1' );
000219 e0e3      	LDI  R30,LOW(3)
00021a e0f0      	LDI  R31,HIGH(3)
00021b 93fa      	ST   -Y,R31
00021c 93ea      	ST   -Y,R30
00021d e3a1      	LDI  R26,LOW(49)
00021e d03a      	RCALL _EE_Write
                 ; 0000 0104 EE_Write(4 ,'2' );
00021f e0e4      	LDI  R30,LOW(4)
000220 e0f0      	LDI  R31,HIGH(4)
000221 d3f4      	RCALL SUBOPT_0x15
                 ; 0000 0105 EE_Write(5 ,'9' );
000222 e0e5      	LDI  R30,LOW(5)
000223 e0f0      	LDI  R31,HIGH(5)
000224 d3f5      	RCALL SUBOPT_0x16
                 ; 0000 0106 
                 ; 0000 0107 EE_Write(6 ,'3' );
000225 e0e6      	LDI  R30,LOW(6)
000226 e0f0      	LDI  R31,HIGH(6)
000227 d3ea      	RCALL SUBOPT_0x14
                 ; 0000 0108 EE_Write(7 ,'2' );
000228 e0e7      	LDI  R30,LOW(7)
000229 e0f0      	LDI  R31,HIGH(7)
00022a d3eb      	RCALL SUBOPT_0x15
                 ; 0000 0109 EE_Write(8 ,'5' );
00022b e0e8      	LDI  R30,LOW(8)
00022c e0f0      	LDI  R31,HIGH(8)
00022d 93fa      	ST   -Y,R31
00022e 93ea      	ST   -Y,R30
00022f e3a5      	LDI  R26,LOW(53)
000230 d028      	RCALL _EE_Write
                 ; 0000 010A 
                 ; 0000 010B EE_Write(9 ,'4' );
000231 e0e9      	LDI  R30,LOW(9)
000232 e0f0      	LDI  R31,HIGH(9)
000233 93fa      	ST   -Y,R31
000234 93ea      	ST   -Y,R30
000235 e3a4      	LDI  R26,LOW(52)
000236 d022      	RCALL _EE_Write
                 ; 0000 010C EE_Write(10 ,'2' );
000237 e0ea      	LDI  R30,LOW(10)
000238 e0f0      	LDI  R31,HIGH(10)
000239 d3dc      	RCALL SUBOPT_0x15
                 ; 0000 010D EE_Write(11 ,'6' );
00023a e0eb      	LDI  R30,LOW(11)
00023b e0f0      	LDI  R31,HIGH(11)
00023c 93fa      	ST   -Y,R31
00023d 93ea      	ST   -Y,R30
00023e e3a6      	LDI  R26,LOW(54)
00023f d019      	RCALL _EE_Write
                 ; 0000 010E 
                 ; 0000 010F EE_Write(12 ,'0' );
000240 e0ec      	LDI  R30,LOW(12)
000241 e0f0      	LDI  R31,HIGH(12)
000242 d3cb      	RCALL SUBOPT_0x13
                 ; 0000 0110 EE_Write(13 ,'7' );
000243 e0ed      	LDI  R30,LOW(13)
000244 e0f0      	LDI  R31,HIGH(13)
000245 93fa      	ST   -Y,R31
000246 93ea      	ST   -Y,R30
000247 e3a7      	LDI  R26,LOW(55)
000248 d010      	RCALL _EE_Write
                 ; 0000 0111 EE_Write(14 ,'9' );
000249 e0ee      	LDI  R30,LOW(14)
00024a e0f0      	LDI  R31,HIGH(14)
00024b d3ce      	RCALL SUBOPT_0x16
                 ; 0000 0112 }
                 ; 0000 0113 
                 ; 0000 0114 }
                 _0x14:
00024c c1a5      	RJMP _0x2080001
                 ; .FEND
                 ;unsigned char EE_Read(unsigned int address){
                 ; 0000 0115 unsigned char EE_Read(unsigned int address){
                 _EE_Read:
                 ; .FSTART _EE_Read
                 ; 0000 0116 while(EECR.1 == 1);    //Wait till EEPROM is ready
00024d 931a      	ST   -Y,R17
00024e 930a      	ST   -Y,R16
00024f 018d      	MOVW R16,R26
                 ;	address -> R16,R17
                 _0x19:
000250 99e1      	SBIC 0x1C,1
000251 cffe      	RJMP _0x19
                 ; 0000 0117 EEAR = address;        //Prepare the address you want to read from
                +
000252 bb1f     +OUT 30 + 1 , R17
000253 bb0e     +OUT 30 , R16
                 	__OUTWR 16,17,30
                 ; 0000 0118 EECR.0 = 1;            //Execute read command
000254 9ae0      	SBI  0x1C,0
                 ; 0000 0119 return EEDR;
000255 b3ed      	IN   R30,0x1D
000256 9109      	LD   R16,Y+
000257 9119      	LD   R17,Y+
000258 9508      	RET
                 ; 0000 011A }
                 ; .FEND
                 ;void EE_Write(unsigned int address, unsigned char data){
                 ; 0000 011B void EE_Write(unsigned int address, unsigned char data){
                 _EE_Write:
                 ; .FSTART _EE_Write
                 ; 0000 011C while(EECR.1 == 1);    //Wait till EEPROM is ready
000259 d3f4      	RCALL __SAVELOCR4
00025a 2f1a      	MOV  R17,R26
                +
00025b 812c     +LDD R18 , Y + 4
00025c 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	address -> R18,R19
                 ;	data -> R17
                 _0x1E:
00025d 99e1      	SBIC 0x1C,1
00025e cffe      	RJMP _0x1E
                 ; 0000 011D EEAR = address;        //Prepare the address you want to read from
                +
00025f bb3f     +OUT 30 + 1 , R19
000260 bb2e     +OUT 30 , R18
                 	__OUTWR 18,19,30
                 ; 0000 011E EEDR = data;           //Prepare the data you want to write in the address above
000261 bb1d      	OUT  0x1D,R17
                 ; 0000 011F EECR.2 = 1;            //Master write enable
000262 9ae2      	SBI  0x1C,2
                 ; 0000 0120 EECR.1 = 1;            //Write Enable
000263 9ae1      	SBI  0x1C,1
                 ; 0000 0121 }
000264 d3f0      	RCALL __LOADLOCR4
000265 9626      	ADIW R28,6
000266 9508      	RET
                 ; .FEND
                 ;int findUser(char dig1, char dig2, char dig3){
                 ; 0000 0122 int findUser(char dig1, char dig2, char dig3){
                 _findUser:
                 ; .FSTART _findUser
                 ; 0000 0123 int i = 0 ;
                 ; 0000 0124 for (  ; i < 5 ; i = i + 1 ) {
000267 d3e4      	RCALL __SAVELOCR6
000268 2f3a      	MOV  R19,R26
000269 812e      	LDD  R18,Y+6
00026a 815f      	LDD  R21,Y+7
                 ;	dig1 -> R21
                 ;	dig2 -> R18
                 ;	dig3 -> R19
                 ;	i -> R16,R17
                +
00026b e000     +LDI R16 , LOW ( 0 )
00026c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x26:
                +
00026d 3005     +CPI R16 , LOW ( 5 )
00026e e0e0     +LDI R30 , HIGH ( 5 )
00026f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
000270 f4c4      	BRGE _0x27
                 ; 0000 0125 if(UsersIds[i][0] == dig1 &&
                 ; 0000 0126 UsersIds[i][1] == dig2 &&
                 ; 0000 0127 UsersIds[i][2] == dig3 )
000271 d3ac      	RCALL SUBOPT_0x17
000272 5ae0      	SUBI R30,LOW(-_UsersIds)
000273 4ffe      	SBCI R31,HIGH(-_UsersIds)
000274 81a0      	LD   R26,Z
000275 175a      	CP   R21,R26
000276 f461      	BRNE _0x29
000277 d3a6      	RCALL SUBOPT_0x17
                +
000278 59ef     +SUBI R30 , LOW ( - _UsersIds - ( 1 ) )
000279 4ffe     +SBCI R31 , HIGH ( - _UsersIds - ( 1 ) )
                 	__ADDW1MN _UsersIds,1
00027a 81a0      	LD   R26,Z
00027b 172a      	CP   R18,R26
00027c f431      	BRNE _0x29
00027d d3a0      	RCALL SUBOPT_0x17
                +
00027e 59ee     +SUBI R30 , LOW ( - _UsersIds - ( 2 ) )
00027f 4ffe     +SBCI R31 , HIGH ( - _UsersIds - ( 2 ) )
                 	__ADDW1MN _UsersIds,2
000280 81a0      	LD   R26,Z
000281 173a      	CP   R19,R26
000282 f009      	BREQ _0x2A
                 _0x29:
000283 c002      	RJMP _0x28
                 _0x2A:
                 ; 0000 0128 return i;
000284 01f8      	MOVW R30,R16
000285 c005      	RJMP _0x2080003
                 ; 0000 0129 }
                 _0x28:
                +
000286 5f0f     +SUBI R16 , LOW ( - 1 )
000287 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000288 cfe4      	RJMP _0x26
                 _0x27:
                 ; 0000 012A 
                 ; 0000 012B return 10;
000289 e0ea      	LDI  R30,LOW(10)
00028a e0f0      	LDI  R31,HIGH(10)
                 _0x2080003:
00028b d3c7      	RCALL __LOADLOCR6
00028c 9628      	ADIW R28,8
00028d 9508      	RET
                 ; 0000 012C }
                 ; .FEND
                 ;void startSmartLock(){
                 ; 0000 012D void startSmartLock(){
                 _startSmartLock:
                 ; .FSTART _startSmartLock
                 ; 0000 012E // interrupts
                 ; 0000 012F bit_set(MCUCR , 1);
00028e b7e5      	IN   R30,0x35
00028f 60e2      	ORI  R30,2
000290 bfe5      	OUT  0x35,R30
                 ; 0000 0130 bit_set(MCUCR , 3);
000291 b7e5      	IN   R30,0x35
000292 60e8      	ORI  R30,8
000293 bfe5      	OUT  0x35,R30
                 ; 0000 0131 bit_clr(MCUCR , 0);
000294 b7e5      	IN   R30,0x35
000295 7fee      	ANDI R30,0xFE
000296 bfe5      	OUT  0x35,R30
                 ; 0000 0132 bit_clr(MCUCR , 2);
000297 b7e5      	IN   R30,0x35
000298 7feb      	ANDI R30,0xFB
000299 bfe5      	OUT  0x35,R30
                 ; 0000 0133 #asm("sei")
00029a 9478      	SEI
                 ; 0000 0134 bit_set(GICR , 6);
00029b b7eb      	IN   R30,0x3B
00029c 64e0      	ORI  R30,0x40
00029d bfeb      	OUT  0x3B,R30
                 ; 0000 0135 bit_set(GICR , 7);
00029e b7eb      	IN   R30,0x3B
00029f 68e0      	ORI  R30,0x80
0002a0 bfeb      	OUT  0x3B,R30
                 ; 0000 0136 
                 ; 0000 0137 // Set KeyPad port ;
                 ; 0000 0138 DDRB  = 0b00000111;
0002a1 e0e7      	LDI  R30,LOW(7)
0002a2 bbe7      	OUT  0x17,R30
                 ; 0000 0139 PORTB = 0b11111000;
0002a3 efe8      	LDI  R30,LOW(248)
0002a4 bbe8      	OUT  0x18,R30
                 ; 0000 013A // Initiate LCD
                 ; 0000 013B lcd_init(20);
0002a5 e1a4      	LDI  R26,LOW(20)
0002a6 d122      	RCALL _lcd_init
                 ; 0000 013C 
                 ; 0000 013D // Data
                 ; 0000 013E UsersIds[0][0]= '1';
0002a7 e3e1      	LDI  R30,LOW(49)
0002a8 93e0 0160 	STS  _UsersIds,R30
                 ; 0000 013F UsersIds[0][1]= '1';
                +
0002aa 93e0 0161+STS _UsersIds + ( 1 ) , R30
                 	__PUTB1MN _UsersIds,1
                 ; 0000 0140 UsersIds[0][2]= '1';
                +
0002ac 93e0 0162+STS _UsersIds + ( 2 ) , R30
                 	__PUTB1MN _UsersIds,2
                 ; 0000 0141 
                 ; 0000 0142 UsersIds[1][0] ='1';
                +
0002ae 93e0 0163+STS _UsersIds + ( 3 ) , R30
                 	__PUTB1MN _UsersIds,3
                 ; 0000 0143 UsersIds[1][1] ='2';
0002b0 e3e2      	LDI  R30,LOW(50)
                +
0002b1 93e0 0164+STS _UsersIds + ( 4 ) , R30
                 	__PUTB1MN _UsersIds,4
                 ; 0000 0144 UsersIds[1][2] ='6';
0002b3 e3e6      	LDI  R30,LOW(54)
                +
0002b4 93e0 0165+STS _UsersIds + ( 5 ) , R30
                 	__PUTB1MN _UsersIds,5
                 ; 0000 0145 
                 ; 0000 0146 UsersIds[2][0] ='1';
0002b6 e3e1      	LDI  R30,LOW(49)
                +
0002b7 93e0 0166+STS _UsersIds + ( 6 ) , R30
                 	__PUTB1MN _UsersIds,6
                 ; 0000 0147 UsersIds[2][1] ='2';
0002b9 e3e2      	LDI  R30,LOW(50)
                +
0002ba 93e0 0167+STS _UsersIds + ( 7 ) , R30
                 	__PUTB1MN _UsersIds,7
                 ; 0000 0148 UsersIds[2][2] ='8';
0002bc e3e8      	LDI  R30,LOW(56)
                +
0002bd 93e0 0168+STS _UsersIds + ( 8 ) , R30
                 	__PUTB1MN _UsersIds,8
                 ; 0000 0149 
                 ; 0000 014A UsersIds[3][0] ='1';
0002bf e3e1      	LDI  R30,LOW(49)
                +
0002c0 93e0 0169+STS _UsersIds + ( 9 ) , R30
                 	__PUTB1MN _UsersIds,9
                 ; 0000 014B UsersIds[3][1] ='3';
0002c2 e3e3      	LDI  R30,LOW(51)
                +
0002c3 93e0 016a+STS _UsersIds + ( 10 ) , R30
                 	__PUTB1MN _UsersIds,10
                 ; 0000 014C UsersIds[3][2] ='0';
0002c5 e3e0      	LDI  R30,LOW(48)
                +
0002c6 93e0 016b+STS _UsersIds + ( 11 ) , R30
                 	__PUTB1MN _UsersIds,11
                 ; 0000 014D 
                 ; 0000 014E UsersIds[4][0] ='1';
0002c8 e3e1      	LDI  R30,LOW(49)
                +
0002c9 93e0 016c+STS _UsersIds + ( 12 ) , R30
                 	__PUTB1MN _UsersIds,12
                 ; 0000 014F UsersIds[4][1] ='3';
0002cb e3e3      	LDI  R30,LOW(51)
                +
0002cc 93e0 016d+STS _UsersIds + ( 13 ) , R30
                 	__PUTB1MN _UsersIds,13
                 ; 0000 0150 UsersIds[4][2] ='2';
0002ce e3e2      	LDI  R30,LOW(50)
                +
0002cf 93e0 016e+STS _UsersIds + ( 14 ) , R30
                 	__PUTB1MN _UsersIds,14
                 ; 0000 0151 
                 ; 0000 0152 
                 ; 0000 0153 UsersNames[0][0] = 'P';
0002d1 e5e0      	LDI  R30,LOW(80)
0002d2 93e0 016f 	STS  _UsersNames,R30
                 ; 0000 0154 UsersNames[0][1] = 'r';
0002d4 e7e2      	LDI  R30,LOW(114)
                +
0002d5 93e0 0170+STS _UsersNames + ( 1 ) , R30
                 	__PUTB1MN _UsersNames,1
                 ; 0000 0155 UsersNames[0][2] = 'o';
0002d7 e6ef      	LDI  R30,LOW(111)
                +
0002d8 93e0 0171+STS _UsersNames + ( 2 ) , R30
                 	__PUTB1MN _UsersNames,2
                 ; 0000 0156 UsersNames[0][3] = 'f';
0002da e6e6      	LDI  R30,LOW(102)
                +
0002db 93e0 0172+STS _UsersNames + ( 3 ) , R30
                 	__PUTB1MN _UsersNames,3
                 ; 0000 0157 
                 ; 0000 0158 
                 ; 0000 0159 UsersNames[1][0] = 'A';
0002dd e4e1      	LDI  R30,LOW(65)
                +
0002de 93e0 0177+STS _UsersNames + ( 8 ) , R30
                 	__PUTB1MN _UsersNames,8
                 ; 0000 015A UsersNames[1][1] = 'h';
0002e0 e6e8      	LDI  R30,LOW(104)
                +
0002e1 93e0 0178+STS _UsersNames + ( 9 ) , R30
                 	__PUTB1MN _UsersNames,9
                 ; 0000 015B UsersNames[1][2] = 'm';
0002e3 e6ed      	LDI  R30,LOW(109)
                +
0002e4 93e0 0179+STS _UsersNames + ( 10 ) , R30
                 	__PUTB1MN _UsersNames,10
                 ; 0000 015C UsersNames[1][3] = 'e';
0002e6 e6e5      	LDI  R30,LOW(101)
                +
0002e7 93e0 017a+STS _UsersNames + ( 11 ) , R30
                 	__PUTB1MN _UsersNames,11
                 ; 0000 015D UsersNames[1][4] = 'd';
0002e9 e6e4      	LDI  R30,LOW(100)
                +
0002ea 93e0 017b+STS _UsersNames + ( 12 ) , R30
                 	__PUTB1MN _UsersNames,12
                 ; 0000 015E 
                 ; 0000 015F UsersNames[2][0] = 'A';
0002ec e4e1      	LDI  R30,LOW(65)
                +
0002ed 93e0 017f+STS _UsersNames + ( 16 ) , R30
                 	__PUTB1MN _UsersNames,16
                 ; 0000 0160 UsersNames[2][1] = 'm';
0002ef e6ed      	LDI  R30,LOW(109)
                +
0002f0 93e0 0180+STS _UsersNames + ( 17 ) , R30
                 	__PUTB1MN _UsersNames,17
                 ; 0000 0161 UsersNames[2][2] = 'r';
0002f2 e7e2      	LDI  R30,LOW(114)
                +
0002f3 93e0 0181+STS _UsersNames + ( 18 ) , R30
                 	__PUTB1MN _UsersNames,18
                 ; 0000 0162 
                 ; 0000 0163 UsersNames[3][0] = 'A';
0002f5 e4e1      	LDI  R30,LOW(65)
                +
0002f6 93e0 0187+STS _UsersNames + ( 24 ) , R30
                 	__PUTB1MN _UsersNames,24
                 ; 0000 0164 UsersNames[3][1] = 'd';
0002f8 e6e4      	LDI  R30,LOW(100)
                +
0002f9 93e0 0188+STS _UsersNames + ( 25 ) , R30
                 	__PUTB1MN _UsersNames,25
                 ; 0000 0165 UsersNames[3][2] = 'e';
0002fb e6e5      	LDI  R30,LOW(101)
                +
0002fc 93e0 0189+STS _UsersNames + ( 26 ) , R30
                 	__PUTB1MN _UsersNames,26
                 ; 0000 0166 UsersNames[3][3] = 'l';
0002fe e6ec      	LDI  R30,LOW(108)
                +
0002ff 93e0 018a+STS _UsersNames + ( 27 ) , R30
                 	__PUTB1MN _UsersNames,27
                 ; 0000 0167 
                 ; 0000 0168 
                 ; 0000 0169 UsersNames[4][0] = 'O';
000301 e4ef      	LDI  R30,LOW(79)
                +
000302 93e0 018f+STS _UsersNames + ( 32 ) , R30
                 	__PUTB1MN _UsersNames,32
                 ; 0000 016A UsersNames[4][1] = 'm';
000304 e6ed      	LDI  R30,LOW(109)
                +
000305 93e0 0190+STS _UsersNames + ( 33 ) , R30
                 	__PUTB1MN _UsersNames,33
                 ; 0000 016B UsersNames[4][2] = 'a';
000307 e6e1      	LDI  R30,LOW(97)
                +
000308 93e0 0191+STS _UsersNames + ( 34 ) , R30
                 	__PUTB1MN _UsersNames,34
                 ; 0000 016C UsersNames[4][3] = 'r';
00030a e7e2      	LDI  R30,LOW(114)
                +
00030b 93e0 0192+STS _UsersNames + ( 35 ) , R30
                 	__PUTB1MN _UsersNames,35
                 ; 0000 016D initialPassCodes('0');
00030d e3a0      	LDI  R26,LOW(48)
00030e deed      	RCALL _initialPassCodes
                 ; 0000 016E }
00030f 9508      	RET
                 ; .FEND
                 ;char keyPad(){
                 ; 0000 016F char keyPad(){
                 _keyPad:
                 ; .FSTART _keyPad
                 ; 0000 0170 while(1){
                 _0x2B:
                 ; 0000 0171 // C1
                 ; 0000 0172 PORTB.0 = 0; PORTB.1 = 1; PORTB.2 = 1;
000310 98c0      	CBI  0x18,0
000311 9ac1      	SBI  0x18,1
000312 9ac2      	SBI  0x18,2
                 ; 0000 0173 //Only C1 is activated
                 ; 0000 0174 switch(PINB){
000313 b3e6      	IN   R30,0x16
                 ; 0000 0175 case 0b11110110:
000314 3fe6      	CPI  R30,LOW(0xF6)
000315 f429      	BRNE _0x37
                 ; 0000 0176 while (PINB.3 == 0);
                 _0x38:
000316 9bb3      	SBIS 0x16,3
000317 cffe      	RJMP _0x38
                 ; 0000 0177 return '1';
000318 e3e1      	LDI  R30,LOW(49)
000319 9508      	RET
                 ; 0000 0178 break;
00031a c014      	RJMP _0x36
                 ; 0000 0179 
                 ; 0000 017A case 0b11101110:
                 _0x37:
00031b 3eee      	CPI  R30,LOW(0xEE)
00031c f429      	BRNE _0x3B
                 ; 0000 017B while (PINB.4 == 0);
                 _0x3C:
00031d 9bb4      	SBIS 0x16,4
00031e cffe      	RJMP _0x3C
                 ; 0000 017C return '4';
00031f e3e4      	LDI  R30,LOW(52)
000320 9508      	RET
                 ; 0000 017D break;
000321 c00d      	RJMP _0x36
                 ; 0000 017E 
                 ; 0000 017F case 0b11011110:
                 _0x3B:
000322 3dee      	CPI  R30,LOW(0xDE)
000323 f429      	BRNE _0x3F
                 ; 0000 0180 while (PINB.5 == 0);
                 _0x40:
000324 9bb5      	SBIS 0x16,5
000325 cffe      	RJMP _0x40
                 ; 0000 0181 return '7';
000326 e3e7      	LDI  R30,LOW(55)
000327 9508      	RET
                 ; 0000 0182 break;
000328 c006      	RJMP _0x36
                 ; 0000 0183 
                 ; 0000 0184 case 0b10111110:
                 _0x3F:
000329 3bee      	CPI  R30,LOW(0xBE)
00032a f421      	BRNE _0x36
                 ; 0000 0185 while (PINB.6 == 0);
                 _0x44:
00032b 9bb6      	SBIS 0x16,6
00032c cffe      	RJMP _0x44
                 ; 0000 0186 return '*';
00032d e2ea      	LDI  R30,LOW(42)
00032e 9508      	RET
                 ; 0000 0187 break;
                 ; 0000 0188 
                 ; 0000 0189 }
                 _0x36:
                 ; 0000 018A 
                 ; 0000 018B // C2
                 ; 0000 018C PORTB.0 = 1; PORTB.1 = 0; PORTB.2 = 1;
00032f 9ac0      	SBI  0x18,0
000330 98c1      	CBI  0x18,1
000331 9ac2      	SBI  0x18,2
                 ; 0000 018D //Only C2 is activated
                 ; 0000 018E switch(PINB){
000332 b3e6      	IN   R30,0x16
                 ; 0000 018F case 0b11110101:
000333 3fe5      	CPI  R30,LOW(0xF5)
000334 f429      	BRNE _0x50
                 ; 0000 0190 while (PINB.3 == 0);
                 _0x51:
000335 9bb3      	SBIS 0x16,3
000336 cffe      	RJMP _0x51
                 ; 0000 0191 return '2';
000337 e3e2      	LDI  R30,LOW(50)
000338 9508      	RET
                 ; 0000 0192 break;
000339 c014      	RJMP _0x4F
                 ; 0000 0193 
                 ; 0000 0194 case 0b11101101:
                 _0x50:
00033a 3eed      	CPI  R30,LOW(0xED)
00033b f429      	BRNE _0x54
                 ; 0000 0195 while (PINB.4 == 0);
                 _0x55:
00033c 9bb4      	SBIS 0x16,4
00033d cffe      	RJMP _0x55
                 ; 0000 0196 return '5';
00033e e3e5      	LDI  R30,LOW(53)
00033f 9508      	RET
                 ; 0000 0197 break;
000340 c00d      	RJMP _0x4F
                 ; 0000 0198 
                 ; 0000 0199 case 0b11011101:
                 _0x54:
000341 3ded      	CPI  R30,LOW(0xDD)
000342 f429      	BRNE _0x58
                 ; 0000 019A while (PINB.5 == 0);
                 _0x59:
000343 9bb5      	SBIS 0x16,5
000344 cffe      	RJMP _0x59
                 ; 0000 019B return '8';
000345 e3e8      	LDI  R30,LOW(56)
000346 9508      	RET
                 ; 0000 019C break;
000347 c006      	RJMP _0x4F
                 ; 0000 019D 
                 ; 0000 019E case 0b10111101:
                 _0x58:
000348 3bed      	CPI  R30,LOW(0xBD)
000349 f421      	BRNE _0x4F
                 ; 0000 019F while (PINB.6 == 0);
                 _0x5D:
00034a 9bb6      	SBIS 0x16,6
00034b cffe      	RJMP _0x5D
                 ; 0000 01A0 return '0';
00034c e3e0      	LDI  R30,LOW(48)
00034d 9508      	RET
                 ; 0000 01A1 break;
                 ; 0000 01A2 }
                 _0x4F:
                 ; 0000 01A3 
                 ; 0000 01A4 // C3
                 ; 0000 01A5 PORTB.0 = 1; PORTB.1 = 1; PORTB.2 = 0;
00034e 9ac0      	SBI  0x18,0
00034f 9ac1      	SBI  0x18,1
000350 98c2      	CBI  0x18,2
                 ; 0000 01A6 //Only C3 is activated
                 ; 0000 01A7 switch(PINB){
000351 b3e6      	IN   R30,0x16
                 ; 0000 01A8 
                 ; 0000 01A9 case 0b11110011:
000352 3fe3      	CPI  R30,LOW(0xF3)
000353 f429      	BRNE _0x69
                 ; 0000 01AA while (PINB.3 == 0);
                 _0x6A:
000354 9bb3      	SBIS 0x16,3
000355 cffe      	RJMP _0x6A
                 ; 0000 01AB return '3';
000356 e3e3      	LDI  R30,LOW(51)
000357 9508      	RET
                 ; 0000 01AC break;
000358 c014      	RJMP _0x68
                 ; 0000 01AD 
                 ; 0000 01AE case 0b11101011:
                 _0x69:
000359 3eeb      	CPI  R30,LOW(0xEB)
00035a f429      	BRNE _0x6D
                 ; 0000 01AF while (PINB.4 == 0);
                 _0x6E:
00035b 9bb4      	SBIS 0x16,4
00035c cffe      	RJMP _0x6E
                 ; 0000 01B0 return '6';
00035d e3e6      	LDI  R30,LOW(54)
00035e 9508      	RET
                 ; 0000 01B1 break;
00035f c00d      	RJMP _0x68
                 ; 0000 01B2 
                 ; 0000 01B3 case 0b11011011:
                 _0x6D:
000360 3deb      	CPI  R30,LOW(0xDB)
000361 f429      	BRNE _0x71
                 ; 0000 01B4 while (PINB.5 == 0);
                 _0x72:
000362 9bb5      	SBIS 0x16,5
000363 cffe      	RJMP _0x72
                 ; 0000 01B5 return '9';
000364 e3e9      	LDI  R30,LOW(57)
000365 9508      	RET
                 ; 0000 01B6 break;
000366 c006      	RJMP _0x68
                 ; 0000 01B7 
                 ; 0000 01B8 case 0b10111011:
                 _0x71:
000367 3beb      	CPI  R30,LOW(0xBB)
000368 f421      	BRNE _0x68
                 ; 0000 01B9 while (PINB.6 == 0);
                 _0x76:
000369 9bb6      	SBIS 0x16,6
00036a cffe      	RJMP _0x76
                 ; 0000 01BA return '#';
00036b e2e3      	LDI  R30,LOW(35)
00036c 9508      	RET
                 ; 0000 01BB break;
                 ; 0000 01BC 
                 ; 0000 01BD }
                 _0x68:
                 ; 0000 01BE 
                 ; 0000 01BF }
00036d cfa2      	RJMP _0x2B
                 ; 0000 01C0 }
                 ; .FEND
                 ;void beepSound(){
                 ; 0000 01C1 void beepSound(){
                 _beepSound:
                 ; .FSTART _beepSound
                 ; 0000 01C2 DDRD  |= (1 << 5);
00036e 9a8d      	SBI  0x11,5
                 ; 0000 01C3 PORTD |= (1 << 5);
00036f 9a95      	SBI  0x12,5
                 ; 0000 01C4 delay_ms(200);
000370 eca8      	LDI  R26,LOW(200)
000371 e0b0      	LDI  R27,0
000372 d303      	RCALL _delay_ms
                 ; 0000 01C5 PORTD &= ~(1 << 5);
000373 9895      	CBI  0x12,5
                 ; 0000 01C6 delay_ms(200);
000374 eca8      	LDI  R26,LOW(200)
000375 e0b0      	LDI  R27,0
                 _0x2080002:
000376 d2ff      	RCALL _delay_ms
                 ; 0000 01C7 }
000377 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000378 931a      	ST   -Y,R17
000379 2f1a      	MOV  R17,R26
00037a b3eb      	IN   R30,0x1B
00037b 70ef      	ANDI R30,LOW(0xF)
00037c 2fae      	MOV  R26,R30
00037d 2fe1      	MOV  R30,R17
00037e 7fe0      	ANDI R30,LOW(0xF0)
00037f 2bea      	OR   R30,R26
000380 bbeb      	OUT  0x1B,R30
                +
000381 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000382 958a     +DEC R24
000383 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000384 9ada      	SBI  0x1B,2
                +
000385 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000386 958a     +DEC R24
000387 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000388 98da      	CBI  0x1B,2
                +
000389 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00038a 958a     +DEC R24
00038b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00038c c065      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00038d 93aa      	ST   -Y,R26
00038e 81a8      	LD   R26,Y
00038f dfe8      	RCALL __lcd_write_nibble_G100
000390 81e8          ld    r30,y
000391 95e2          swap  r30
000392 83e8          st    y,r30
000393 81a8      	LD   R26,Y
000394 dfe3      	RCALL __lcd_write_nibble_G100
                +
000395 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000396 958a     +DEC R24
000397 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000398 9621      	ADIW R28,1
000399 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00039a 931a      	ST   -Y,R17
00039b 930a      	ST   -Y,R16
00039c 2f1a      	MOV  R17,R26
00039d 810a      	LDD  R16,Y+2
00039e 2fe1      	MOV  R30,R17
00039f e0f0      	LDI  R31,0
0003a0 56e9      	SUBI R30,LOW(-__base_y_G100)
0003a1 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0003a2 81e0      	LD   R30,Z
0003a3 0fe0      	ADD  R30,R16
0003a4 2fae      	MOV  R26,R30
0003a5 dfe7      	RCALL __lcd_write_data
0003a6 2e50      	MOV  R5,R16
0003a7 2e41      	MOV  R4,R17
0003a8 8119      	LDD  R17,Y+1
0003a9 8108      	LDD  R16,Y+0
0003aa 9623      	ADIW R28,3
0003ab 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0003ac e0a2      	LDI  R26,LOW(2)
0003ad d276      	RCALL SUBOPT_0x18
0003ae e0ac      	LDI  R26,LOW(12)
0003af dfdd      	RCALL __lcd_write_data
0003b0 e0a1      	LDI  R26,LOW(1)
0003b1 d272      	RCALL SUBOPT_0x18
0003b2 e0e0      	LDI  R30,LOW(0)
0003b3 2e4e      	MOV  R4,R30
0003b4 2e5e      	MOV  R5,R30
0003b5 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0003b6 931a      	ST   -Y,R17
0003b7 2f1a      	MOV  R17,R26
0003b8 301a      	CPI  R17,10
0003b9 f011      	BREQ _0x2000005
0003ba 1457      	CP   R5,R7
0003bb f038      	BRLO _0x2000004
                 _0x2000005:
0003bc e0e0      	LDI  R30,LOW(0)
0003bd 93ea      	ST   -Y,R30
0003be 9443      	INC  R4
0003bf 2da4      	MOV  R26,R4
0003c0 dfd9      	RCALL _lcd_gotoxy
0003c1 301a      	CPI  R17,10
0003c2 f179      	BREQ _0x2080001
                 _0x2000004:
0003c3 9453      	INC  R5
0003c4 9ad8      	SBI  0x1B,0
0003c5 2fa1      	MOV  R26,R17
0003c6 dfc6      	RCALL __lcd_write_data
0003c7 98d8      	CBI  0x1B,0
0003c8 c029      	RJMP _0x2080001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0003c9 931a      	ST   -Y,R17
0003ca 2f1a      	MOV  R17,R26
0003cb b3ea      	IN   R30,0x1A
0003cc 6fe0      	ORI  R30,LOW(0xF0)
0003cd bbea      	OUT  0x1A,R30
0003ce 9ad2      	SBI  0x1A,2
0003cf 9ad0      	SBI  0x1A,0
0003d0 9ad1      	SBI  0x1A,1
0003d1 98da      	CBI  0x1B,2
0003d2 98d8      	CBI  0x1B,0
0003d3 98d9      	CBI  0x1B,1
0003d4 2e71      	MOV  R7,R17
0003d5 2fe1      	MOV  R30,R17
0003d6 58e0      	SUBI R30,-LOW(128)
                +
0003d7 93e0 0199+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0003d9 2fe1      	MOV  R30,R17
0003da 54e0      	SUBI R30,-LOW(192)
                +
0003db 93e0 019a+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0003dd e1a4      	LDI  R26,LOW(20)
0003de e0b0      	LDI  R27,0
0003df d296      	RCALL _delay_ms
0003e0 d247      	RCALL SUBOPT_0x19
0003e1 d246      	RCALL SUBOPT_0x19
0003e2 d245      	RCALL SUBOPT_0x19
0003e3 e2a0      	LDI  R26,LOW(32)
0003e4 df93      	RCALL __lcd_write_nibble_G100
                +
0003e5 ec88     +LDI R24 , LOW ( 200 )
0003e6 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003e7 9701     +SBIW R24 , 1
0003e8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003e9 e2a8      	LDI  R26,LOW(40)
0003ea dfa2      	RCALL __lcd_write_data
0003eb e0a4      	LDI  R26,LOW(4)
0003ec dfa0      	RCALL __lcd_write_data
0003ed e8a5      	LDI  R26,LOW(133)
0003ee df9e      	RCALL __lcd_write_data
0003ef e0a6      	LDI  R26,LOW(6)
0003f0 df9c      	RCALL __lcd_write_data
0003f1 dfba      	RCALL _lcd_clear
                 _0x2080001:
0003f2 9119      	LD   R17,Y+
0003f3 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G101:
                 ; .FSTART __print_G101
0003f4 93ba      	ST   -Y,R27
0003f5 93aa      	ST   -Y,R26
0003f6 9726      	SBIW R28,6
0003f7 d254      	RCALL __SAVELOCR6
0003f8 e010      	LDI  R17,0
0003f9 85ac      	LDD  R26,Y+12
0003fa 85bd      	LDD  R27,Y+12+1
0003fb e0e0      	LDI  R30,LOW(0)
0003fc e0f0      	LDI  R31,HIGH(0)
0003fd 93ed      	ST   X+,R30
0003fe 93fc      	ST   X,R31
                 _0x2020016:
0003ff 89ea      	LDD  R30,Y+18
000400 89fb      	LDD  R31,Y+18+1
000401 9631      	ADIW R30,1
000402 8bea      	STD  Y+18,R30
000403 8bfb      	STD  Y+18+1,R31
000404 9731      	SBIW R30,1
000405 91e4      	LPM  R30,Z
000406 2f2e      	MOV  R18,R30
000407 30e0      	CPI  R30,0
000408 f409      	BRNE PC+2
000409 c10b      	RJMP _0x2020018
00040a 2fe1      	MOV  R30,R17
00040b 30e0      	CPI  R30,0
00040c f431      	BRNE _0x202001C
00040d 3225      	CPI  R18,37
00040e f411      	BRNE _0x202001D
00040f e011      	LDI  R17,LOW(1)
000410 c001      	RJMP _0x202001E
                 _0x202001D:
000411 d21d      	RCALL SUBOPT_0x1A
                 _0x202001E:
000412 c101      	RJMP _0x202001B
                 _0x202001C:
000413 30e1      	CPI  R30,LOW(0x1)
000414 f4a1      	BRNE _0x202001F
000415 3225      	CPI  R18,37
000416 f411      	BRNE _0x2020020
000417 d217      	RCALL SUBOPT_0x1A
000418 c0fa      	RJMP _0x20200CC
                 _0x2020020:
000419 e012      	LDI  R17,LOW(2)
00041a e040      	LDI  R20,LOW(0)
00041b e000      	LDI  R16,LOW(0)
00041c 322d      	CPI  R18,45
00041d f411      	BRNE _0x2020021
00041e e001      	LDI  R16,LOW(1)
00041f c0f4      	RJMP _0x202001B
                 _0x2020021:
000420 322b      	CPI  R18,43
000421 f411      	BRNE _0x2020022
000422 e24b      	LDI  R20,LOW(43)
000423 c0f0      	RJMP _0x202001B
                 _0x2020022:
000424 3220      	CPI  R18,32
000425 f411      	BRNE _0x2020023
000426 e240      	LDI  R20,LOW(32)
000427 c0ec      	RJMP _0x202001B
                 _0x2020023:
000428 c002      	RJMP _0x2020024
                 _0x202001F:
000429 30e2      	CPI  R30,LOW(0x2)
00042a f439      	BRNE _0x2020025
                 _0x2020024:
00042b e050      	LDI  R21,LOW(0)
00042c e013      	LDI  R17,LOW(3)
00042d 3320      	CPI  R18,48
00042e f411      	BRNE _0x2020026
00042f 6800      	ORI  R16,LOW(128)
000430 c0e3      	RJMP _0x202001B
                 _0x2020026:
000431 c003      	RJMP _0x2020027
                 _0x2020025:
000432 30e3      	CPI  R30,LOW(0x3)
000433 f009      	BREQ PC+2
000434 c0df      	RJMP _0x202001B
                 _0x2020027:
000435 3320      	CPI  R18,48
000436 f010      	BRLO _0x202002A
000437 332a      	CPI  R18,58
000438 f008      	BRLO _0x202002B
                 _0x202002A:
000439 c007      	RJMP _0x2020029
                 _0x202002B:
00043a e0aa      	LDI  R26,LOW(10)
00043b 9f5a      	MUL  R21,R26
00043c 2d50      	MOV  R21,R0
00043d 2fe2      	MOV  R30,R18
00043e 53e0      	SUBI R30,LOW(48)
00043f 0f5e      	ADD  R21,R30
000440 c0d3      	RJMP _0x202001B
                 _0x2020029:
000441 2fe2      	MOV  R30,R18
000442 36e3      	CPI  R30,LOW(0x63)
000443 f439      	BRNE _0x202002F
000444 d1f1      	RCALL SUBOPT_0x1B
000445 89e8      	LDD  R30,Y+16
000446 89f9      	LDD  R31,Y+16+1
000447 81a4      	LDD  R26,Z+4
000448 93aa      	ST   -Y,R26
000449 d1f2      	RCALL SUBOPT_0x1C
00044a c0c8      	RJMP _0x2020030
                 _0x202002F:
00044b 37e3      	CPI  R30,LOW(0x73)
00044c f429      	BRNE _0x2020032
00044d d1e8      	RCALL SUBOPT_0x1B
00044e d1f3      	RCALL SUBOPT_0x1D
00044f d101      	RCALL _strlen
000450 2f1e      	MOV  R17,R30
000451 c007      	RJMP _0x2020033
                 _0x2020032:
000452 37e0      	CPI  R30,LOW(0x70)
000453 f449      	BRNE _0x2020035
000454 d1e1      	RCALL SUBOPT_0x1B
000455 d1ec      	RCALL SUBOPT_0x1D
000456 d106      	RCALL _strlenf
000457 2f1e      	MOV  R17,R30
000458 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000459 6002      	ORI  R16,LOW(2)
00045a 770f      	ANDI R16,LOW(127)
00045b e030      	LDI  R19,LOW(0)
00045c c03a      	RJMP _0x2020036
                 _0x2020035:
00045d 36e4      	CPI  R30,LOW(0x64)
00045e f011      	BREQ _0x2020039
00045f 36e9      	CPI  R30,LOW(0x69)
000460 f411      	BRNE _0x202003A
                 _0x2020039:
000461 6004      	ORI  R16,LOW(4)
000462 c002      	RJMP _0x202003B
                 _0x202003A:
000463 37e5      	CPI  R30,LOW(0x75)
000464 f431      	BRNE _0x202003C
                 _0x202003B:
000465 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000466 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000467 83ee      	STD  Y+6,R30
000468 83ff      	STD  Y+6+1,R31
000469 e015      	LDI  R17,LOW(5)
00046a c00c      	RJMP _0x202003D
                 _0x202003C:
00046b 35e8      	CPI  R30,LOW(0x58)
00046c f411      	BRNE _0x202003F
00046d 6008      	ORI  R16,LOW(8)
00046e c003      	RJMP _0x2020040
                 _0x202003F:
00046f 37e8      	CPI  R30,LOW(0x78)
000470 f009      	BREQ PC+2
000471 c0a1      	RJMP _0x2020071
                 _0x2020040:
000472 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000473 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000474 83ee      	STD  Y+6,R30
000475 83ff      	STD  Y+6+1,R31
000476 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000477 ff02      	SBRS R16,2
000478 c015      	RJMP _0x2020042
000479 d1bc      	RCALL SUBOPT_0x1B
00047a 89a8      	LDD  R26,Y+16
00047b 89b9      	LDD  R27,Y+16+1
00047c 9614      	ADIW R26,4
00047d 91ed      	LD   R30,X+
00047e 91fd      	LD   R31,X+
00047f 87ea      	STD  Y+10,R30
000480 87fb      	STD  Y+10+1,R31
000481 85ab      	LDD  R26,Y+11
000482 23aa      	TST  R26
000483 f422      	BRPL _0x2020043
000484 d1d5      	RCALL __ANEGW1
000485 87ea      	STD  Y+10,R30
000486 87fb      	STD  Y+10+1,R31
000487 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000488 3040      	CPI  R20,0
000489 f011      	BREQ _0x2020044
00048a 5f1f      	SUBI R17,-LOW(1)
00048b c001      	RJMP _0x2020045
                 _0x2020044:
00048c 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00048d c009      	RJMP _0x2020046
                 _0x2020042:
00048e d1a7      	RCALL SUBOPT_0x1B
00048f 89a8      	LDD  R26,Y+16
000490 89b9      	LDD  R27,Y+16+1
000491 9614      	ADIW R26,4
                +
000492 91ed     +LD R30 , X +
000493 91fc     +LD R31 , X
000494 9711     +SBIW R26 , 1
                 	__GETW1P
000495 87ea      	STD  Y+10,R30
000496 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
000497 fd00      	SBRC R16,0
000498 c010      	RJMP _0x2020047
                 _0x2020048:
000499 1715      	CP   R17,R21
00049a f470      	BRSH _0x202004A
00049b ff07      	SBRS R16,7
00049c c008      	RJMP _0x202004B
00049d ff02      	SBRS R16,2
00049e c004      	RJMP _0x202004C
00049f 7f0b      	ANDI R16,LOW(251)
0004a0 2f24      	MOV  R18,R20
0004a1 5011      	SUBI R17,LOW(1)
0004a2 c001      	RJMP _0x202004D
                 _0x202004C:
0004a3 e320      	LDI  R18,LOW(48)
                 _0x202004D:
0004a4 c001      	RJMP _0x202004E
                 _0x202004B:
0004a5 e220      	LDI  R18,LOW(32)
                 _0x202004E:
0004a6 d188      	RCALL SUBOPT_0x1A
0004a7 5051      	SUBI R21,LOW(1)
0004a8 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0004a9 2f31      	MOV  R19,R17
0004aa ff01      	SBRS R16,1
0004ab c016      	RJMP _0x202004F
                 _0x2020050:
0004ac 3030      	CPI  R19,0
0004ad f099      	BREQ _0x2020052
0004ae ff03      	SBRS R16,3
0004af c006      	RJMP _0x2020053
0004b0 81ee      	LDD  R30,Y+6
0004b1 81ff      	LDD  R31,Y+6+1
0004b2 9125      	LPM  R18,Z+
0004b3 83ee      	STD  Y+6,R30
0004b4 83ff      	STD  Y+6+1,R31
0004b5 c005      	RJMP _0x2020054
                 _0x2020053:
0004b6 81ae      	LDD  R26,Y+6
0004b7 81bf      	LDD  R27,Y+6+1
0004b8 912d      	LD   R18,X+
0004b9 83ae      	STD  Y+6,R26
0004ba 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0004bb d173      	RCALL SUBOPT_0x1A
0004bc 3050      	CPI  R21,0
0004bd f009      	BREQ _0x2020055
0004be 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0004bf 5031      	SUBI R19,LOW(1)
0004c0 cfeb      	RJMP _0x2020050
                 _0x2020052:
0004c1 c048      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0004c2 e320      	LDI  R18,LOW(48)
0004c3 81ee      	LDD  R30,Y+6
0004c4 81ff      	LDD  R31,Y+6+1
0004c5 d1a7      	RCALL __GETW1PF
0004c6 87e8      	STD  Y+8,R30
0004c7 87f9      	STD  Y+8+1,R31
0004c8 81ee      	LDD  R30,Y+6
0004c9 81ff      	LDD  R31,Y+6+1
0004ca 9632      	ADIW R30,2
0004cb 83ee      	STD  Y+6,R30
0004cc 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0004cd 85e8      	LDD  R30,Y+8
0004ce 85f9      	LDD  R31,Y+8+1
0004cf 85aa      	LDD  R26,Y+10
0004d0 85bb      	LDD  R27,Y+10+1
0004d1 17ae      	CP   R26,R30
0004d2 07bf      	CPC  R27,R31
0004d3 f050      	BRLO _0x202005C
0004d4 5f2f      	SUBI R18,-LOW(1)
0004d5 85a8      	LDD  R26,Y+8
0004d6 85b9      	LDD  R27,Y+8+1
0004d7 85ea      	LDD  R30,Y+10
0004d8 85fb      	LDD  R31,Y+10+1
0004d9 1bea      	SUB  R30,R26
0004da 0bfb      	SBC  R31,R27
0004db 87ea      	STD  Y+10,R30
0004dc 87fb      	STD  Y+10+1,R31
0004dd cfef      	RJMP _0x202005A
                 _0x202005C:
0004de 332a      	CPI  R18,58
0004df f028      	BRLO _0x202005D
0004e0 ff03      	SBRS R16,3
0004e1 c002      	RJMP _0x202005E
0004e2 5f29      	SUBI R18,-LOW(7)
0004e3 c001      	RJMP _0x202005F
                 _0x202005E:
0004e4 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0004e5 fd04      	SBRC R16,4
0004e6 c019      	RJMP _0x2020061
0004e7 3321      	CPI  R18,49
0004e8 f420      	BRSH _0x2020063
0004e9 85a8      	LDD  R26,Y+8
0004ea 85b9      	LDD  R27,Y+8+1
0004eb 9711      	SBIW R26,1
0004ec f409      	BRNE _0x2020062
                 _0x2020063:
0004ed c009      	RJMP _0x20200CD
                 _0x2020062:
0004ee 1753      	CP   R21,R19
0004ef f010      	BRLO _0x2020067
0004f0 ff00      	SBRS R16,0
0004f1 c001      	RJMP _0x2020068
                 _0x2020067:
0004f2 c011      	RJMP _0x2020066
                 _0x2020068:
0004f3 e220      	LDI  R18,LOW(32)
0004f4 ff07      	SBRS R16,7
0004f5 c00a      	RJMP _0x2020069
0004f6 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0004f7 6100      	ORI  R16,LOW(16)
0004f8 ff02      	SBRS R16,2
0004f9 c006      	RJMP _0x202006A
0004fa 7f0b      	ANDI R16,LOW(251)
0004fb 934a      	ST   -Y,R20
0004fc d13f      	RCALL SUBOPT_0x1C
0004fd 3050      	CPI  R21,0
0004fe f009      	BREQ _0x202006B
0004ff 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000500 d12e      	RCALL SUBOPT_0x1A
000501 3050      	CPI  R21,0
000502 f009      	BREQ _0x202006C
000503 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000504 5031      	SUBI R19,LOW(1)
000505 85a8      	LDD  R26,Y+8
000506 85b9      	LDD  R27,Y+8+1
000507 9712      	SBIW R26,2
000508 f008      	BRLO _0x2020059
000509 cfb8      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00050a ff00      	SBRS R16,0
00050b c007      	RJMP _0x202006D
                 _0x202006E:
00050c 3050      	CPI  R21,0
00050d f029      	BREQ _0x2020070
00050e 5051      	SUBI R21,LOW(1)
00050f e2e0      	LDI  R30,LOW(32)
000510 93ea      	ST   -Y,R30
000511 d12a      	RCALL SUBOPT_0x1C
000512 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000513 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000514 ceea      	RJMP _0x2020016
                 _0x2020018:
000515 85ac      	LDD  R26,Y+12
000516 85bd      	LDD  R27,Y+12+1
000517 91ed      	LD   R30,X+
000518 91fd      	LD   R31,X+
000519 d139      	RCALL __LOADLOCR6
00051a 9664      	ADIW R28,20
00051b 9508      	RET
                 ; .FEND
                 _put_lcd_G101:
                 ; .FSTART _put_lcd_G101
00051c d131      	RCALL __SAVELOCR4
00051d 018d      	MOVW R16,R26
00051e 813c      	LDD  R19,Y+4
00051f 2fa3      	MOV  R26,R19
000520 de95      	RCALL _lcd_putchar
000521 01d8      	MOVW R26,R16
000522 91ed      	LD   R30,X+
000523 91fd      	LD   R31,X+
000524 9631      	ADIW R30,1
000525 93fe      	ST   -X,R31
000526 93ee      	ST   -X,R30
000527 d12d      	RCALL __LOADLOCR4
000528 9625      	ADIW R28,5
000529 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
00052a 92ff      	PUSH R15
00052b 2ef8      	MOV  R15,R24
00052c 9726      	SBIW R28,6
00052d 931a      	ST   -Y,R17
00052e 930a      	ST   -Y,R16
00052f 01de      	MOVW R26,R28
000530 9614      	ADIW R26,4
                +
000531 2400     +CLR R0
000532 0daf     +ADD R26 , R15
000533 1db0     +ADC R27 , R0
                 	__ADDW2R15
000534 018d      	MOVW R16,R26
000535 e0e0      	LDI  R30,LOW(0)
000536 83ec      	STD  Y+4,R30
000537 83ed      	STD  Y+4+1,R30
000538 83ee      	STD  Y+6,R30
000539 83ef      	STD  Y+6+1,R30
00053a 01de      	MOVW R26,R28
00053b 9618      	ADIW R26,8
                +
00053c 2400     +CLR R0
00053d 0daf     +ADD R26 , R15
00053e 1db0     +ADC R27 , R0
                 	__ADDW2R15
00053f 91ed      	LD   R30,X+
000540 91fd      	LD   R31,X+
000541 93fa      	ST   -Y,R31
000542 93ea      	ST   -Y,R30
000543 931a      	ST   -Y,R17
000544 930a      	ST   -Y,R16
000545 e1ec      	LDI  R30,LOW(_put_lcd_G101)
000546 e0f5      	LDI  R31,HIGH(_put_lcd_G101)
000547 93fa      	ST   -Y,R31
000548 93ea      	ST   -Y,R30
000549 01de      	MOVW R26,R28
00054a 9618      	ADIW R26,8
00054b dea8      	RCALL __print_G101
00054c 8119      	LDD  R17,Y+1
00054d 8108      	LDD  R16,Y+0
00054e 9628      	ADIW R28,8
00054f 90ff      	POP  R15
000550 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000551 93ba      	ST   -Y,R27
000552 93aa      	ST   -Y,R26
000553 91a9          ld   r26,y+
000554 91b9          ld   r27,y+
000555 27ee          clr  r30
000556 27ff          clr  r31
                 strlen0:
000557 916d          ld   r22,x+
000558 2366          tst  r22
000559 f011          breq strlen1
00055a 9631          adiw r30,1
00055b cffb          rjmp strlen0
                 strlen1:
00055c 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00055d 93ba      	ST   -Y,R27
00055e 93aa      	ST   -Y,R26
00055f 27aa          clr  r26
000560 27bb          clr  r27
000561 91e9          ld   r30,y+
000562 91f9          ld   r31,y+
                 strlenf0:
000563 9005      	lpm  r0,z+
000564 2000          tst  r0
000565 f011          breq strlenf1
000566 9611          adiw r26,1
000567 cffb          rjmp strlenf0
                 strlenf1:
000568 01fd          movw r30,r26
000569 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _UsersIds:
000160           	.BYTE 0xF
                 _UsersNames:
00016f           	.BYTE 0x28
                 __base_y_G100:
000197           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x0:
00056a 93fa      	ST   -Y,R31
00056b 93ea      	ST   -Y,R30
00056c e080      	LDI  R24,0
00056d dfbc      	RCALL _lcd_printf
00056e 9622      	ADIW R28,2
00056f cda0      	RJMP _keyPad
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x1:
000570 83eb      	STD  Y+3,R30
                +
000571 e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
000572 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
000573 93fa      	ST   -Y,R31
000574 93ea      	ST   -Y,R30
000575 81ed      	LDD  R30,Y+5
000576 27ff      	CLR  R31
000577 2766      	CLR  R22
000578 2777      	CLR  R23
000579 d0f7      	RCALL __PUTPARD1
00057a e084      	LDI  R24,4
00057b dfae      	RCALL _lcd_printf
00057c 9626      	ADIW R28,6
00057d dd92      	RCALL _keyPad
00057e 83ea      	STD  Y+2,R30
                +
00057f e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
000580 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
000581 93fa      	ST   -Y,R31
000582 93ea      	ST   -Y,R30
000583 81ec      	LDD  R30,Y+4
000584 27ff      	CLR  R31
000585 2766      	CLR  R22
000586 2777      	CLR  R23
000587 d0e9      	RCALL __PUTPARD1
000588 e084      	LDI  R24,4
000589 dfa0      	RCALL _lcd_printf
00058a 9626      	ADIW R28,6
00058b dd84      	RCALL _keyPad
00058c 83e9      	STD  Y+1,R30
                +
00058d e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
00058e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
00058f 93fa      	ST   -Y,R31
000590 93ea      	ST   -Y,R30
000591 81eb      	LDD  R30,Y+3
000592 27ff      	CLR  R31
000593 2766      	CLR  R22
000594 2777      	CLR  R23
000595 d0db      	RCALL __PUTPARD1
000596 e084      	LDI  R24,4
000597 df92      	RCALL _lcd_printf
000598 9626      	ADIW R28,6
000599 eea8      	LDI  R26,LOW(1000)
00059a e0b3      	LDI  R27,HIGH(1000)
00059b c0da      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
00059c 93fa      	ST   -Y,R31
00059d 93ea      	ST   -Y,R30
00059e e080      	LDI  R24,0
00059f df8a      	RCALL _lcd_printf
0005a0 9622      	ADIW R28,2
0005a1 cdcc      	RJMP _beepSound
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0x3:
0005a2 d0ce      	RCALL __PUTPARD1
0005a3 e084      	LDI  R24,4
0005a4 df85      	RCALL _lcd_printf
0005a5 9626      	ADIW R28,6
0005a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
0005a7 93fa      	ST   -Y,R31
0005a8 93ea      	ST   -Y,R30
0005a9 e080      	LDI  R24,0
0005aa df7f      	RCALL _lcd_printf
0005ab 9622      	ADIW R28,2
0005ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5:
0005ad 920a      	ST   -Y,R0
0005ae 921a      	ST   -Y,R1
0005af 92fa      	ST   -Y,R15
0005b0 936a      	ST   -Y,R22
0005b1 937a      	ST   -Y,R23
0005b2 938a      	ST   -Y,R24
0005b3 939a      	ST   -Y,R25
0005b4 93aa      	ST   -Y,R26
0005b5 93ba      	ST   -Y,R27
0005b6 93ea      	ST   -Y,R30
0005b7 93fa      	ST   -Y,R31
0005b8 b7ef      	IN   R30,SREG
0005b9 93ea      	ST   -Y,R30
0005ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0005bb d090      	RCALL __SAVELOCR6
0005bc 2f1a      	MOV  R17,R26
0005bd 810e      	LDD  R16,Y+6
0005be 813f      	LDD  R19,Y+7
                +
0005bf 8548     +LDD R20 , Y + 8
0005c0 8559     +LDD R21 , Y + 8 + 1
                 	__GETWRS 20,21,8
0005c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7:
0005c2 01fa      	MOVW R30,R20
0005c3 e0a3      	LDI  R26,LOW(3)
0005c4 e0b0      	LDI  R27,HIGH(3)
0005c5 d09f      	RCALL __MULW12
0005c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x8:
0005c7 2f1e      	MOV  R17,R30
                +
0005c8 e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
0005c9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
0005ca 93fa      	ST   -Y,R31
0005cb 93ea      	ST   -Y,R30
0005cc 2fe1      	MOV  R30,R17
0005cd 27ff      	CLR  R31
0005ce 2766      	CLR  R22
0005cf 2777      	CLR  R23
0005d0 cfd1      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:48 WORDS
                 SUBOPT_0x9:
0005d1 dd3e      	RCALL _keyPad
0005d2 2f0e      	MOV  R16,R30
                +
0005d3 e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
0005d4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
0005d5 93fa      	ST   -Y,R31
0005d6 93ea      	ST   -Y,R30
0005d7 2fe0      	MOV  R30,R16
0005d8 27ff      	CLR  R31
0005d9 2766      	CLR  R22
0005da 2777      	CLR  R23
0005db cfc6      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:48 WORDS
                 SUBOPT_0xA:
0005dc dd33      	RCALL _keyPad
0005dd 2f3e      	MOV  R19,R30
                +
0005de e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
0005df e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
0005e0 93fa      	ST   -Y,R31
0005e1 93ea      	ST   -Y,R30
0005e2 2fe3      	MOV  R30,R19
0005e3 27ff      	CLR  R31
0005e4 2766      	CLR  R22
0005e5 2777      	CLR  R23
0005e6 cfbb      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
0005e7 e0e0      	LDI  R30,LOW(0)
0005e8 e0f0      	LDI  R31,HIGH(0)
0005e9 93fa      	ST   -Y,R31
0005ea 93ea      	ST   -Y,R30
0005eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
0005ec 931a      	ST   -Y,R17
0005ed 930a      	ST   -Y,R16
0005ee 2fa3      	MOV  R26,R19
0005ef dbf1      	RCALL _passCodeMatch
0005f0 9730      	SBIW R30,0
0005f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
0005f2 931a      	ST   -Y,R17
0005f3 930a      	ST   -Y,R16
0005f4 2fa3      	MOV  R26,R19
0005f5 dc71      	RCALL _findUser
0005f6 2f2e      	MOV  R18,R30
0005f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
0005f8 ddb3      	RCALL _lcd_clear
                +
0005f9 e1e7     +LDI R30 , LOW ( 2 * _0x0 + ( 177 ) )
0005fa e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 177 ) )
                 	__POINTW1FN _0x0,177
0005fb cf6e      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
0005fc 2fe2      	MOV  R30,R18
0005fd e0f0      	LDI  R31,0
0005fe 93fa      	ST   -Y,R31
0005ff 93ea      	ST   -Y,R30
000600 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000601 931a      	ST   -Y,R17
000602 930a      	ST   -Y,R16
000603 2fa3      	MOV  R26,R19
000604 cb45      	RJMP _newPassCode
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x11:
                +
000605 e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
000606 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
000607 93fa      	ST   -Y,R31
000608 93ea      	ST   -Y,R30
000609 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x12:
00060a 27ff      	CLR  R31
00060b 2766      	CLR  R22
00060c 2777      	CLR  R23
00060d cf94      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
00060e 93fa      	ST   -Y,R31
00060f 93ea      	ST   -Y,R30
000610 e3a0      	LDI  R26,LOW(48)
000611 cc47      	RJMP _EE_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000612 93fa      	ST   -Y,R31
000613 93ea      	ST   -Y,R30
000614 e3a3      	LDI  R26,LOW(51)
000615 cc43      	RJMP _EE_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
000616 93fa      	ST   -Y,R31
000617 93ea      	ST   -Y,R30
000618 e3a2      	LDI  R26,LOW(50)
000619 cc3f      	RJMP _EE_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
00061a 93fa      	ST   -Y,R31
00061b 93ea      	ST   -Y,R30
00061c e3a9      	LDI  R26,LOW(57)
00061d cc3b      	RJMP _EE_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
                +
00061e e0a3     +LDI R26 , 3
00061f 9fa0     +MUL R26 , R16
000620 01f0     +MOVW R30 , R0
000621 9fa1     +MUL R26 , R17
000622 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
000623 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000624 dd68      	RCALL __lcd_write_data
000625 e0a3      	LDI  R26,LOW(3)
000626 e0b0      	LDI  R27,0
000627 c04e      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x19:
000628 e3a0      	LDI  R26,LOW(48)
000629 dd4e      	RCALL __lcd_write_nibble_G100
                +
00062a ec88     +LDI R24 , LOW ( 200 )
00062b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00062c 9701     +SBIW R24 , 1
00062d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00062e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1A:
00062f 932a      	ST   -Y,R18
000630 85ad      	LDD  R26,Y+13
000631 85be      	LDD  R27,Y+13+1
000632 85ef      	LDD  R30,Y+15
000633 89f8      	LDD  R31,Y+15+1
000634 9509      	ICALL
000635 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x1B:
000636 89e8      	LDD  R30,Y+16
000637 89f9      	LDD  R31,Y+16+1
000638 9734      	SBIW R30,4
000639 8be8      	STD  Y+16,R30
00063a 8bf9      	STD  Y+16+1,R31
00063b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
00063c 85ad      	LDD  R26,Y+13
00063d 85be      	LDD  R27,Y+13+1
00063e 85ef      	LDD  R30,Y+15
00063f 89f8      	LDD  R31,Y+15+1
000640 9509      	ICALL
000641 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
000642 89a8      	LDD  R26,Y+16
000643 89b9      	LDD  R27,Y+16+1
000644 9614      	ADIW R26,4
000645 91ed      	LD   R30,X+
000646 91fd      	LD   R31,X+
000647 83ee      	STD  Y+6,R30
000648 83ff      	STD  Y+6+1,R31
000649 81ae      	LDD  R26,Y+6
00064a 81bf      	LDD  R27,Y+6+1
00064b 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00064c 935a      	ST   -Y,R21
                 __SAVELOCR5:
00064d 934a      	ST   -Y,R20
                 __SAVELOCR4:
00064e 933a      	ST   -Y,R19
                 __SAVELOCR3:
00064f 932a      	ST   -Y,R18
                 __SAVELOCR2:
000650 931a      	ST   -Y,R17
000651 930a      	ST   -Y,R16
000652 9508      	RET
                 
                 __LOADLOCR6:
000653 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000654 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000655 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000656 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000657 8119      	LDD  R17,Y+1
000658 8108      	LD   R16,Y
000659 9508      	RET
                 
                 __ANEGW1:
00065a 95f1      	NEG  R31
00065b 95e1      	NEG  R30
00065c 40f0      	SBCI R31,0
00065d 9508      	RET
                 
                 __LSLW3:
00065e 0fee      	LSL  R30
00065f 1fff      	ROL  R31
                 __LSLW2:
000660 0fee      	LSL  R30
000661 1fff      	ROL  R31
000662 0fee      	LSL  R30
000663 1fff      	ROL  R31
000664 9508      	RET
                 
                 __MULW12:
                 __MULW12U:
000665 9ffa      	MUL  R31,R26
000666 2df0      	MOV  R31,R0
000667 9feb      	MUL  R30,R27
000668 0df0      	ADD  R31,R0
000669 9fea      	MUL  R30,R26
00066a 2de0      	MOV  R30,R0
00066b 0df1      	ADD  R31,R1
00066c 9508      	RET
                 
                 __GETW1PF:
00066d 9005      	LPM  R0,Z+
00066e 91f4      	LPM  R31,Z
00066f 2de0      	MOV  R30,R0
000670 9508      	RET
                 
                 __PUTPARD1:
000671 937a      	ST   -Y,R23
000672 936a      	ST   -Y,R22
000673 93fa      	ST   -Y,R31
000674 93ea      	ST   -Y,R30
000675 9508      	RET
                 
                 _delay_ms:
000676 9610      	adiw r26,0
000677 f039      	breq __delay_ms1
                 __delay_ms0:
000678 95a8      	wdr
                +
000679 ed80     +LDI R24 , LOW ( 0x7D0 )
00067a e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00067b 9701     +SBIW R24 , 1
00067c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00067d 9711      	sbiw r26,1
00067e f7c9      	brne __delay_ms0
                 __delay_ms1:
00067f 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  20 r1 :   4 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  56 r17:  60 r18:  35 r19:  24 r20:  13 r21:  22 r22:  15 r23:  11 
r24:  31 r25:   7 r26: 135 r27:  44 r28:  29 r29:   1 r30: 377 r31: 139 
x  :  21 y  : 253 z  :  17 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   7 
adiw  :  37 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  21 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  54 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :  11 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  31 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :  13 cpc   :   2 cpi   :  52 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  13 inc   :   2 jmp   :  22 ld    :  43 ldd   :  79 ldi   : 251 
lds   :   0 lpm   :  14 lsl   :   3 lsr   :   0 mov   :  54 movw  :  17 
mul   :   6 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :  11 out   :  22 pop   :   1 push  :   1 rcall : 202 ret   :  54 
reti  :   1 rjmp  : 111 rol   :   3 ror   :   0 sbc   :   1 sbci  :   7 
sbi   :  20 sbic  :   2 sbis  :  12 sbiw  :  18 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 122 std   :  35 sts   :  37 sub   :   1 subi  :  21 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 57 out of 116 (49.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000d00   3042    286   3328   16384  20.3%
[.dseg] 0x000060 0x00019b      0     59     59    1024   5.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
