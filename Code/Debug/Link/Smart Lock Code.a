;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;char keyPad();
;void startSmartLock();
;void beepSound();
;int findUser(char dig1, char dig2, char dig3);
;unsigned char EE_Read(unsigned int address);
;void EE_Write(unsigned int address, unsigned char data);
;void initialPassCodes(char resetPc);
;int passCodeMatch( int id, char pas1, char pas2 , char pas3 );
;void openDoor();
;void closeDoor();
;void changePass();
;void ContactAdmin();
;void AdminPassChange();
;void newPassCode(int userId  , char dig1  , char dig2 , char dig3);
;void main(void){
; 0000 0022 void main(void){

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0023 // Start Code;
; 0000 0024 startSmartLock();
;PCODE: $0000000E VOL: 0
; 0000 0025 while (1){
;PCODE: $0000000F VOL: 0
; 0000 0026 char num , dig1 , dig2 , dig3 ,userId ;
; 0000 0027 lcd_clear();
;PCODE: $00000010 VOL: 0
;	num -> Y+4
;	dig1 -> Y+3
;	dig2 -> Y+2
;	dig3 -> Y+1
;	userId -> Y+0
;PCODE: $00000011 VOL: 0
; 0000 0028 lcd_gotoxy(2,1);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0029 lcd_printf("Press * to Login");
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002A num = keyPad();
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002B if(num != '*') continue;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002C lcd_clear();
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002D lcd_printf("Enter your ID: ");// Ask for ID
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002E // Take 3 Digit ID and print it to the user
; 0000 002F dig1 = keyPad();
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0030 lcd_printf("%c" , dig1);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0031 dig2 = keyPad();
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0032 lcd_printf("%c" , dig2);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0033 dig3 = keyPad();
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0034 lcd_printf("%c" , dig3);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0035 delay_ms(1000);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0036 
; 0000 0037 // to Know user Id in data or is not Exist
; 0000 0038 userId = findUser(dig1, dig2, dig3 );
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0039 lcd_clear();
;PCODE: $0000005A VOL: 0
; 0000 003A // if User id not exist
; 0000 003B if(userId == 10) {
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003C lcd_printf("Wrong ID");
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 003D beepSound();
;PCODE: $00000065 VOL: 0
; 0000 003E beepSound();
;PCODE: $00000066 VOL: 0
; 0000 003F continue;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0040 }
; 0000 0041 lcd_printf("Enter Pass Code: ");
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0042 // Take 3 Digit ID and print it to the user
; 0000 0043 dig1 = keyPad();
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0044 lcd_printf("%c" , dig1);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0045 dig2 = keyPad();
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0046 lcd_printf("%c" , dig2);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0047 dig3 = keyPad();
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0048 lcd_printf("%c" , dig3);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0049 delay_ms(1000);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 004A 
; 0000 004B lcd_clear();
;PCODE: $00000097 VOL: 0
; 0000 004C // In case pass does not match
; 0000 004D if(passCodeMatch(userId , dig1 , dig2 , dig3 ) == 0 ){
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 004E lcd_printf("Sorry, Wrong PC");
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 004F beepSound();
;PCODE: $000000AA VOL: 0
; 0000 0050 continue;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0051 }
; 0000 0052 
; 0000 0053 lcd_printf("Welcom :%s \n   Door is opening" ,  UsersNames[userId]);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0054 openDoor();
;PCODE: $000000BB VOL: 0
; 0000 0055 lcd_clear();
;PCODE: $000000BC VOL: 0
; 0000 0056 lcd_printf("\n  Door is Closeing");
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0057 closeDoor();
;PCODE: $000000C4 VOL: 0
; 0000 0058 }
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0059 
; 0000 005A }
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;interrupt [2] void Admininterrupt(void){
; 0000 005D interrupt [2] void Admininterrupt(void){
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 005E AdminPassChange();
;PCODE: $000000CD VOL: 0
; 0000 005F }
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;interrupt [3] void Setpc(void){
; 0000 0060 interrupt [3] void Setpc(void){
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0061 changePass();
;PCODE: $000000D3 VOL: 0
; 0000 0062 }
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;void newPassCode(int userId  , char dig1  , char dig2 , char dig3){
; 0000 0063 void newPassCode(int userId  , char dig1  , char dig2 , char dig3){
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0064 
; 0000 0065 lcd_clear();
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;	userId -> R20,R21
;	dig1 -> R19
;	dig2 -> R16
;	dig3 -> R17
;PCODE: $000000E1 VOL: 0
; 0000 0066 lcd_printf("New PC stored (:");
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0067 EE_Write(userId*3 , dig1);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0068 EE_Write(userId*3 + 1 , dig2);
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0069 EE_Write(userId*3 + 2 , dig3);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 006A delay_ms(1500);
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 006B }
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;void AdminPassChange(){
; 0000 006C void AdminPassChange(){
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 006D 
; 0000 006E char  dig1 , dig2 , dig3 ,userId;
; 0000 006F 
; 0000 0070 lcd_clear();
;PCODE: $00000105 VOL: 0
;	dig1 -> R17
;	dig2 -> R16
;	dig3 -> R19
;	userId -> R18
;PCODE: $00000106 VOL: 0
; 0000 0071 lcd_printf("Enter Admin PC: ");// Ask for ID
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0072 
; 0000 0073 // Take 3 Digit ID and print it to the user
; 0000 0074 dig1 = keyPad();
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0075 lcd_printf("%c" , dig1);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0076 dig2 = keyPad();
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 0077 lcd_printf("%c" , dig2);
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0078 dig3 = keyPad();
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0079 lcd_printf("%c" , dig3);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 007A delay_ms(500);
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 007B 
; 0000 007C if(passCodeMatch( 0 , dig1 , dig2 , dig3 ) == 0){
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 007D ContactAdmin();
;PCODE: $0000013C VOL: 0
; 0000 007E return ;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 007F }
; 0000 0080 
; 0000 0081 lcd_clear();
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 0082 lcd_printf("Student ID: ");// Ask for ID
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 0083 
; 0000 0084 // Take 3 Digit ID and print it to the user
; 0000 0085 
; 0000 0086 dig1 = keyPad();
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0087 lcd_printf("%c" , dig1);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0088 dig2 = keyPad();
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0089 lcd_printf("%c" , dig2);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 008A dig3 = keyPad();
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 008B lcd_printf("%c" , dig3);
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 008C delay_ms(500);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 008D 
; 0000 008E // to Know user Id in data or is not Exist
; 0000 008F userId = findUser(dig1, dig2, dig3 );
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0090 lcd_clear();
;PCODE: $00000174 VOL: 0
; 0000 0091 if ( userId == 10 ){
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0092 ContactAdmin();
;PCODE: $00000178 VOL: 0
; 0000 0093 return ;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 0094 }
; 0000 0095 
; 0000 0096 lcd_clear();
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 0097 lcd_printf("Enter new PC : ");
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0098 dig1 = keyPad();
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 0099 lcd_printf("%c" , dig1);
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 009A dig2 = keyPad();
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 009B lcd_printf("%c" , dig2);
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 009C dig3 = keyPad();
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 009D lcd_printf("%c" , dig3);
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 009E 
; 0000 009F newPassCode(userId ,dig1 , dig2, dig3 );
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00A0 }
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;void ContactAdmin(){
; 0000 00A1 void ContactAdmin(){
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00A2 lcd_clear();
;PCODE: $000001B6 VOL: 0
; 0000 00A3 lcd_printf("\nContact Admin");
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 00A4 beepSound();
;PCODE: $000001BE VOL: 0
; 0000 00A5 beepSound();
;PCODE: $000001BF VOL: 0
; 0000 00A6 }
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;void changePass(){
; 0000 00A7 void changePass(){
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00A8 char dig1 , dig2 , dig3 ,userId ,dig11 , dig22 , dig33 ;
; 0000 00A9 lcd_clear();
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;	dig1 -> R17
;	dig2 -> R16
;	dig3 -> R19
;	userId -> R18
;	dig11 -> R21
;	dig22 -> R20
;	dig33 -> Y+6
;PCODE: $000001C6 VOL: 0
; 0000 00AA lcd_printf("Enter ID : ");
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00AB 
; 0000 00AC dig1 = keyPad();
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 00AD lcd_printf("%c" , dig1);
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 00AE dig2 = keyPad();
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00AF lcd_printf("%c" , dig2);
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 00B0 dig3 = keyPad();
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 00B1 lcd_printf("%c" , dig3);
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00B2 
; 0000 00B3 userId = findUser(dig1, dig2, dig3 );
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 00B4 
; 0000 00B5 if(userId == 10)// if User id not exist
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 00B6 {
; 0000 00B7 ContactAdmin();
;PCODE: $000001FA VOL: 0
; 0000 00B8 return ;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 00B9 }
; 0000 00BA 
; 0000 00BB lcd_printf("\nEnter Old PC : ");
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 00BC 
; 0000 00BD dig1 = keyPad();
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00BE lcd_printf("%c" , dig1);
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 00BF dig2 = keyPad();
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 00C0 lcd_printf("%c" , dig2);
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 00C1 dig3 = keyPad();
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 00C2 lcd_printf("%c" , dig3);
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 00C3 
; 0000 00C4 if(passCodeMatch(userId , dig1 , dig2 , dig3 ) == 0 ){
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 00C5 ContactAdmin();
;PCODE: $00000233 VOL: 0
; 0000 00C6 return ;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 00C7 }
; 0000 00C8 
; 0000 00C9 lcd_clear();
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 00CA lcd_printf("Enter new PC : ");
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 00CB dig1 = keyPad();
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00CC lcd_printf("%c" , dig1);
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 00CD dig2 = keyPad();
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 00CE lcd_printf("%c" , dig2);
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 00CF dig3 = keyPad();
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 00D0 lcd_printf("%c" , dig3);
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 00D1 
; 0000 00D2 
; 0000 00D3 lcd_printf("\nRe-enter new PC : ");
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 00D4 dig11 = keyPad();
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 00D5 lcd_printf("%c" , dig1);
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 00D6 dig22 = keyPad();
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 00D7 lcd_printf("%c" , dig2);
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 00D8 dig33 = keyPad();
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 00D9 lcd_printf("%c" , dig3);
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 00DA 
; 0000 00DB if (dig1 != dig11 || dig2 != dig22 || dig3 !=dig33   ){
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 00DC ContactAdmin();
;PCODE: $0000029A VOL: 0
; 0000 00DD return ;
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 00DE }
; 0000 00DF newPassCode(userId ,dig1 , dig2, dig3 );
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 00E0 }
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;void closeDoor(){
; 0000 00E1 void closeDoor(){
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 00E2 DDRC  |= (1 << 1);
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 00E3 PORTC |= (1 << 1);
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 00E4 delay_ms(2000);
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
; 0000 00E5 PORTC &= ~(1 << 1);
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 00E6 delay_ms(2000);
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 00E7 }
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;void openDoor(){
; 0000 00E8 void openDoor(){
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
; 0000 00E9 
; 0000 00EA DDRC  |= (1 << 0);
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 00EB PORTC |= (1 << 0);
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 00EC delay_ms(2000);
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 00ED PORTC &= ~(1 << 0);
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 00EE delay_ms(2000);
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 00EF 
; 0000 00F0 }
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;int passCodeMatch ( int id , char pas1, char pas2 , char pas3 ){
; 0000 00F1 int passCodeMatch ( int id , char pas1, char pas2 , char pas3 ){
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 00F2 if(EE_Read(3*id ) == pas1 &&
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;	id -> R20,R21
;	pas1 -> R19
;	pas2 -> R16
;	pas3 -> R17
; 0000 00F3 EE_Read(3*id + 1) == pas2 &&
; 0000 00F4 EE_Read(3*id + 2) == pas3 )
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 00F5 {
; 0000 00F6 return 1;
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 00F7 }
; 0000 00F8 return 0;
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 00F9 }
;PCODE: $000002F4 VOL: 0
;void initialPassCodes(char resetPc){
; 0000 00FA void initialPassCodes(char resetPc){
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 00FB if ( resetPc == '1' ||
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;	resetPc -> R17
; 0000 00FC EE_Read(0) == 255 &&
; 0000 00FD EE_Read(1) == 255 &&
; 0000 00FE EE_Read(2) == 255  ){
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 00FF EE_Write(0 ,'2' );
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 0100 EE_Write(1 ,'0' );
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 0101 EE_Write(2 ,'3' );
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 0102 
; 0000 0103 EE_Write(3 ,'1' );
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
; 0000 0104 EE_Write(4 ,'2' );
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
; 0000 0105 EE_Write(5 ,'9' );
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 0106 
; 0000 0107 EE_Write(6 ,'3' );
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 0108 EE_Write(7 ,'2' );
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 0109 EE_Write(8 ,'5' );
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
; 0000 010A 
; 0000 010B EE_Write(9 ,'4' );
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
; 0000 010C EE_Write(10 ,'2' );
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 010D EE_Write(11 ,'6' );
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
; 0000 010E 
; 0000 010F EE_Write(12 ,'0' );
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 0110 EE_Write(13 ,'7' );
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
; 0000 0111 EE_Write(14 ,'9' );
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 0112 }
; 0000 0113 
; 0000 0114 }
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;unsigned char EE_Read(unsigned int address){
; 0000 0115 unsigned char EE_Read(unsigned int address){
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 0116 while(EECR.1 == 1);    //Wait till EEPROM is ready
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;	address -> R16,R17
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 0117 EEAR = address;        //Prepare the address you want to read from
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0000 0118 EECR.0 = 1;            //Execute read command
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 0119 return EEDR;
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 011A }
;PCODE: $00000361 VOL: 0
;void EE_Write(unsigned int address, unsigned char data){
; 0000 011B void EE_Write(unsigned int address, unsigned char data){
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 011C while(EECR.1 == 1);    //Wait till EEPROM is ready
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;	address -> R18,R19
;	data -> R17
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
; 0000 011D EEAR = address;        //Prepare the address you want to read from
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 011E EEDR = data;           //Prepare the data you want to write in the address above
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 011F EECR.2 = 1;            //Master write enable
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
; 0000 0120 EECR.1 = 1;            //Write Enable
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
; 0000 0121 }
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;int findUser(char dig1, char dig2, char dig3){
; 0000 0122 int findUser(char dig1, char dig2, char dig3){
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
; 0000 0123 int i = 0 ;
; 0000 0124 for (  ; i < 5 ; i = i + 1 ) {
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;	dig1 -> R21
;	dig2 -> R18
;	dig3 -> R19
;	i -> R16,R17
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0000 0125 if(UsersIds[i][0] == dig1 &&
; 0000 0126 UsersIds[i][1] == dig2 &&
; 0000 0127 UsersIds[i][2] == dig3 )
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 0128 return i;
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 0129 }
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
; 0000 012A 
; 0000 012B return 10;
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 012C }
;PCODE: $000003B1 VOL: 0
;void startSmartLock(){
; 0000 012D void startSmartLock(){
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
; 0000 012E // interrupts
; 0000 012F bit_set(MCUCR , 1);
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 0130 bit_set(MCUCR , 3);
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
; 0000 0131 bit_clr(MCUCR , 0);
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 0132 bit_clr(MCUCR , 2);
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 0133 #asm("sei")
;PCODE: $000003C0 VOL: 0
; 0000 0134 bit_set(GICR , 6);
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 0135 bit_set(GICR , 7);
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
; 0000 0136 
; 0000 0137 // Set KeyPad port ;
; 0000 0138 DDRB  = 0b00000111;
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 0139 PORTB = 0b11111000;
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
; 0000 013A // Initiate LCD
; 0000 013B lcd_init(20);
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 013C 
; 0000 013D // Data
; 0000 013E UsersIds[0][0]= '1';
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
; 0000 013F UsersIds[0][1]= '1';
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 0140 UsersIds[0][2]= '1';
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0000 0141 
; 0000 0142 UsersIds[1][0] ='1';
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 0143 UsersIds[1][1] ='2';
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 0144 UsersIds[1][2] ='6';
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
; 0000 0145 
; 0000 0146 UsersIds[2][0] ='1';
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0147 UsersIds[2][1] ='2';
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
; 0000 0148 UsersIds[2][2] ='8';
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
; 0000 0149 
; 0000 014A UsersIds[3][0] ='1';
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 014B UsersIds[3][1] ='3';
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 014C UsersIds[3][2] ='0';
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
; 0000 014D 
; 0000 014E UsersIds[4][0] ='1';
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 014F UsersIds[4][1] ='3';
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
; 0000 0150 UsersIds[4][2] ='2';
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 0151 
; 0000 0152 
; 0000 0153 UsersNames[0][0] = 'P';
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 0154 UsersNames[0][1] = 'r';
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
; 0000 0155 UsersNames[0][2] = 'o';
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0000 0156 UsersNames[0][3] = 'f';
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 0157 
; 0000 0158 
; 0000 0159 UsersNames[1][0] = 'A';
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 015A UsersNames[1][1] = 'h';
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 015B UsersNames[1][2] = 'm';
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
; 0000 015C UsersNames[1][3] = 'e';
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 015D UsersNames[1][4] = 'd';
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
; 0000 015E 
; 0000 015F UsersNames[2][0] = 'A';
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0000 0160 UsersNames[2][1] = 'm';
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 0161 UsersNames[2][2] = 'r';
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
; 0000 0162 
; 0000 0163 UsersNames[3][0] = 'A';
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0000 0164 UsersNames[3][1] = 'd';
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
; 0000 0165 UsersNames[3][2] = 'e';
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
; 0000 0166 UsersNames[3][3] = 'l';
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
; 0000 0167 
; 0000 0168 
; 0000 0169 UsersNames[4][0] = 'O';
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 016A UsersNames[4][1] = 'm';
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
; 0000 016B UsersNames[4][2] = 'a';
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0000 016C UsersNames[4][3] = 'r';
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
; 0000 016D initialPassCodes('0');
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
; 0000 016E }
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;char keyPad(){
; 0000 016F char keyPad(){
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 0170 while(1){
;PCODE: $0000043A VOL: 0
; 0000 0171 // C1
; 0000 0172 PORTB.0 = 0; PORTB.1 = 1; PORTB.2 = 1;
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
; 0000 0173 //Only C1 is activated
; 0000 0174 switch(PINB){
;PCODE: $00000441 VOL: 0
; 0000 0175 case 0b11110110:
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
; 0000 0176 while (PINB.3 == 0);
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
; 0000 0177 return '1';
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
; 0000 0178 break;
;PCODE: $0000044C VOL: 0
; 0000 0179 
; 0000 017A case 0b11101110:
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
; 0000 017B while (PINB.4 == 0);
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
; 0000 017C return '4';
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
; 0000 017D break;
;PCODE: $00000458 VOL: 0
; 0000 017E 
; 0000 017F case 0b11011110:
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
; 0000 0180 while (PINB.5 == 0);
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 0181 return '7';
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
; 0000 0182 break;
;PCODE: $00000464 VOL: 0
; 0000 0183 
; 0000 0184 case 0b10111110:
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
; 0000 0185 while (PINB.6 == 0);
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
; 0000 0186 return '*';
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
; 0000 0187 break;
;PCODE: $00000470 VOL: 0
; 0000 0188 
; 0000 0189 }
;PCODE: $00000471 VOL: 0
; 0000 018A 
; 0000 018B // C2
; 0000 018C PORTB.0 = 1; PORTB.1 = 0; PORTB.2 = 1;
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
; 0000 018D //Only C2 is activated
; 0000 018E switch(PINB){
;PCODE: $00000478 VOL: 0
; 0000 018F case 0b11110101:
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 0190 while (PINB.3 == 0);
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
; 0000 0191 return '2';
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0000 0192 break;
;PCODE: $00000483 VOL: 0
; 0000 0193 
; 0000 0194 case 0b11101101:
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
; 0000 0195 while (PINB.4 == 0);
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
; 0000 0196 return '5';
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
; 0000 0197 break;
;PCODE: $0000048F VOL: 0
; 0000 0198 
; 0000 0199 case 0b11011101:
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
; 0000 019A while (PINB.5 == 0);
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
; 0000 019B return '8';
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 019C break;
;PCODE: $0000049B VOL: 0
; 0000 019D 
; 0000 019E case 0b10111101:
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
; 0000 019F while (PINB.6 == 0);
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
; 0000 01A0 return '0';
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
; 0000 01A1 break;
;PCODE: $000004A7 VOL: 0
; 0000 01A2 }
;PCODE: $000004A8 VOL: 0
; 0000 01A3 
; 0000 01A4 // C3
; 0000 01A5 PORTB.0 = 1; PORTB.1 = 1; PORTB.2 = 0;
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
; 0000 01A6 //Only C3 is activated
; 0000 01A7 switch(PINB){
;PCODE: $000004AF VOL: 0
; 0000 01A8 
; 0000 01A9 case 0b11110011:
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
; 0000 01AA while (PINB.3 == 0);
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
; 0000 01AB return '3';
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
; 0000 01AC break;
;PCODE: $000004BA VOL: 0
; 0000 01AD 
; 0000 01AE case 0b11101011:
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
; 0000 01AF while (PINB.4 == 0);
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
; 0000 01B0 return '6';
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
; 0000 01B1 break;
;PCODE: $000004C6 VOL: 0
; 0000 01B2 
; 0000 01B3 case 0b11011011:
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
; 0000 01B4 while (PINB.5 == 0);
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
; 0000 01B5 return '9';
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
; 0000 01B6 break;
;PCODE: $000004D2 VOL: 0
; 0000 01B7 
; 0000 01B8 case 0b10111011:
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0000 01B9 while (PINB.6 == 0);
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
; 0000 01BA return '#';
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
; 0000 01BB break;
;PCODE: $000004DE VOL: 0
; 0000 01BC 
; 0000 01BD }
;PCODE: $000004DF VOL: 0
; 0000 01BE 
; 0000 01BF }
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
; 0000 01C0 }
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;void beepSound(){
; 0000 01C1 void beepSound(){
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
; 0000 01C2 DDRD  |= (1 << 5);
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
; 0000 01C3 PORTD |= (1 << 5);
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
; 0000 01C4 delay_ms(200);
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0000 01C5 PORTD &= ~(1 << 5);
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
; 0000 01C6 delay_ms(200);
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
; 0000 01C7 }
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
